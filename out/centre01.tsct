/*
* This file was auto-generated using 'silver-reversing-sct' tool
* to better understand the scripts presented, one is encouraged to
* view the catalogs at: 
* https://github.com/nadavshemesh/silver-reversing-sct/blob/master/docs/index.md
*
* Any further information and support of this project please visit:
* https://github.com/nadavshemesh/silver-reversing-sct 
*/


._DATA
	init_position1	{ 4615, -929, -3947 }	
	init_position2	{ 4639, -930, -3630 }	
	init_position	{ 4848, -929, -3795 }	
	VAR_23	{ 0, 0 }	
	fx_position	{ -7755, 1825, 5210 }	
	VAR_25	{ -3295, 1825, 3290 }	

._on_load
	call load_item(int 93 /* cutlass */ )
	call load_item(int 91 /* rapier */ )
	execute SCRIPT_5
	switch(gamevar room_state)
	 {
			case 1
				execute SCRIPT_4
				break 
			default 
				break 
	}

._infinite_loop
	execute SCRIPT_7
	switch(gamevar room_state)
	 {
			case 1
				execute SCRIPT_3
				break 
			default 
				break 
	}

._on_exit
	switch(gamevar room_state)
	 {
			case 1
				gamevar room_state ++ 
				break 
			default 
				break 
	}

._SCRIPT_3

._SCRIPT_4
	var muscles = call create_enemy(int 30, int 0, var &init_position, int 105)
	var dick = call create_enemy(int 31, int 0, var &init_position1, int 90)
	var finnegan = call create_enemy(int 32, int 0, var &init_position2, int 80)
	call add_item_to_char(var finnegan, int 43 /* cheese */ , int 1, int 0)
	call add_item_to_char(var dick, int 26 /* scroll */ , int 1, int 0)
	call set_char_running(var muscles)
	call set_char_running(var dick)
	call set_char_running(var finnegan)
	call func_19(var muscles, call get_selected_hero())
	call func_19(var finnegan, call get_selected_hero())
	call func_19(var dick, call get_selected_hero())

._SCRIPT_5
	call play_3d_fx("RAIN", var &fx_position, var &VAR_25, int 0)
	execute SCRIPT_6

._SCRIPT_6
	call load_sound_set(int 25)

	 /* play the sound 'blank' */ 
	call play_loaded_sound(int 1, int -1, int 25, int 0)
	var thunrumb_sound_ref = call play_loaded_sound(int 3, int -1, int 25, int 0)
	var VAR_7 = int 70
	call set_sound_volume(var thunrumb_sound_ref, var VAR_7)
	var VAR_6 = int 1

._SCRIPT_7
	if(var ! VAR_6)
	 {
			call log("random_rain_fx: Rain SFX not initialised! See Marc")
			exit_script 
	}
	switch(var VAR_10)
	 {
			case 0
				if(var VAR_9)
				 {
						var VAR_12 = int 1
						var VAR_10 ++ 
						var VAR_11 = int 0
				}
				break 
			case 1
				if(var VAR_7 < int 200)
				 {
						var VAR_13 = var VAR_11 % int 2
						if(var VAR_13 == int 0)
						 {
								var VAR_7 += var VAR_12
								call set_sound_volume(var thunrumb_sound_ref, var VAR_7)
						}
				}
				else
				 {
						var VAR_10 ++ 
						var VAR_11 = int 0
				}
				break 
			case 2
				if(var VAR_11 > int 150)
				 {
						var VAR_10 ++ 
						var VAR_11 = int 0
				}
				break 
			case 3
				if(var VAR_7 > int 70)
				 {
						var VAR_13 = var VAR_11 % int 2
						if(var VAR_13)
						 {
								var VAR_7 -= var VAR_12
								call set_sound_volume(var thunrumb_sound_ref, var VAR_7)
						}
				}
				else
				 {
						var VAR_9 = int 0
						var VAR_10 = int 0
						var VAR_11 = int 0
				}
				break 
	}
	execute SCRIPT_8
	execute SCRIPT_9
	var VAR_11 ++ 

._SCRIPT_8
	switch(var VAR_15)
	 {
			case 0
				var VAR_16 = int 0
				var VAR_17 = call randomize_int(int 1200, int 1801)
				var VAR_15 ++ 
				break 
			case 1
				if(var VAR_16 > var VAR_17)
				 {
						var thunstrk_sound_ref = call play_loaded_sound(int 4, int 0, int 25, int 0)
						call set_sound_volume(var thunstrk_sound_ref, call randomize_int(int 100, int 201))
						call func_11a(var thunstrk_sound_ref, call randomize_int(int 0, int 128))
						if(var ! VAR_9)
						 {
								var VAR_9 = int 1
						}
						var VAR_15 ++ 
						var VAR_16 = int 0
				}
				break 
			case 2
				if(var VAR_16 > int 200)
				 {
						var VAR_15 = int 0
						var VAR_16 = int 0
				}
				break 
	}
	var VAR_16 ++ 

._SCRIPT_9
	switch(var VAR_19)
	 {
			case 0
				if(gamevar scene_counter > int 600)
				 {
						var VAR_19 ++ 
				}
				break 
			case 1
				var VAR_20 = int 0
				call reset_local_timer()
				var VAR_22 = call randomize_int(int 400, int 601)
				var VAR_19 ++ 
				break 
			case 2
				if(call is_local_timer_greater_than(var VAR_22))
				 {
						call apply_effect_on_char(gamevar misc_fx_scripts, int 6, int 0, int 0)
						call reset_local_timer()
						var VAR_23 = int 255
						var VAR_22 = call randomize_int(int 1, int 31)
						var VAR_20 = int 0
						var VAR_19 ++ 
				}
				break 
			case 3
				if(call is_local_timer_greater_than(var VAR_22))
				 {
						var VAR_23 -= int 4 * var VAR_22
						var verwind_sound_ref = call play_loaded_sound(int 5, int 0, int 25, int 0)
						call set_sound_volume(var verwind_sound_ref, var VAR_23)
						var VAR_22 = int 255 - var VAR_23
						var VAR_20 = int 0
						var VAR_19 ++ 
				}
				break 
			case 4
				if(var VAR_20 > var VAR_22)
				 {
						var verwind_sound_ref = call play_loaded_sound /* 'thunstrk' */ (int 4, int 0, int 25, int 0)
						call set_sound_volume(var verwind_sound_ref, var VAR_23)
						if(var ! VAR_9)
						 {
								var VAR_9 = int 1
						}
						var VAR_19 ++ 
						var VAR_20 = int 0
				}
				break 
			case 5
				if(var VAR_20 > int 100)
				 {
						var VAR_19 = int 1
						var VAR_20 = int 0
				}
				break 
	}
	var VAR_20 ++ 
