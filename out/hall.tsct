/*
* This file was auto-generated using 'silver-reversing-sct' tool
* to better understand the scripts presented, one is encouraged to
* view the catalogs at: 
* https://github.com/nadavshemesh/silver-reversing-sct/blob/master/docs/index.md
*
* Any further information and support of this project please visit:
* https://github.com/nadavshemesh/silver-reversing-sct 
*/


._DATA
	VAR_1	{ 0, 0 }	
	VAR_3	{ 0, 0 }	
	blank_sound_ref	{ 0, -2798, 0, -577 }	
	VAR_22	{ 0, 0 }	
	DoorCls3_sound_ref	-1	
	hoot_sound_ref	-1	
	bigfire_sound_ref	-1	
	VAR_36	0	
	VAR_37	{ -1639, 0, 172, -1664, 0, -1263 }	
	VAR_38	{ -231, 0, 270, -244, 0, -1382 }	
	VAR_39	{ 1308, 0, 280, 1283, 0, -1378 }	
	VAR_40	{ -871, 599, 725 }	
	VAR_41	{ -2018, 679, -1711 }	
	VAR_42	{ 461, 600, -2092 }	
	VAR_43	{ 382, 600, 1023 }	
	VAR_44	{ 2073, 600, -2124 }	
	VAR_45	{ 2188, 599, 951 }	
	VAR_46	{ 15, 0, -892, 600, 216, 8 }	
	VAR_47	{ 15, 0, -2120, 600, -1325, 8 }	
	VAR_48	{ 15, 0, 521, 600, -1322, 8 }	
	VAR_49	{ 15, 0, 410, 600, 253, 8 }	
	VAR_50	{ 15, 0, 1971, 600, -1291, 8 }	
	VAR_51	{ 15, 0, 1939, 601, 690, 12, 14, 16, VAR_36, 1, 0, 2188, 599, 951, 35, 8 }	
	VAR_52	{ -892, 600, 216 }	
	VAR_53	{ -2120, 600, -1325 }	
	VAR_54	{ 521, 600, -1322 }	
	VAR_55	{ 410, 600, 253 }	
	VAR_56	{ 1971, 600, -1291 }	
	arr	1	
	VAR_58	1	
	VAR_59	1	
	VAR_60	1	
	VAR_61	1	
	VAR_62	1	
	arr_1	{ VAR_37, VAR_37, VAR_38, VAR_38, VAR_39, VAR_39 }	
	arr_4	{ 182, 355, 352, 175, 335, 235 }	
	arr_3	{ VAR_40, VAR_41, VAR_42, VAR_43, VAR_44, VAR_45 }	
	arr_2	{ 39, 39, 39, 39, 39, 188 }	
	arr_5	{ VAR_46, VAR_47, VAR_48, VAR_49, VAR_50, VAR_51 }	
	arr_6	{ VAR_52, VAR_53, VAR_54, VAR_55, VAR_56, 0 }	
	VAR_74	{ 85, 9830913, 46, 1, 40, 1, 43, 1, 42, 1, -1 }	
	VAR_75	{ 22, 0, 48, 0, 46, 1, -1 }	
	init_position	{ -911, 600, -1513 }	
	init_position1	{ 580, 600, 532 }	
	VAR_82	-1	
	enemy_gen_script	{ 0, 0, 1, -1, 8, 2, 4, 0, 9, 0, 1, 5, 192, 192, -1, 2, 2, 3, 2, 5, 0, 100, 7, 1, 6, 6, 1, -1 }	

._on_load
	call load_sound_set(int 28)
	call load_sound_set(int 51)
	call load_sound_set(int 1)
	call play_bgm("CHAINS")
	execute SCRIPT_9
	if(gamevar is_room_cleared)
	 {
			execute SCRIPT_10
	}
	else
	 {
			switch(gamevar room_state)
			 {
					case 1
						execute SCRIPT_18
						execute SCRIPT_4
						execute SCRIPT_17
						break 
					case 2
						execute SCRIPT_6
						break 
					case 3
						execute SCRIPT_8
						break 
					case 0
						break 
			}
	}

._infinite_loop
	execute SCRIPT_20
	if(gamevar !is_room_cleared)
	 {
			switch(gamevar room_state)
			 {
					case 1
						execute SCRIPT_3
						break 
					case 2
						execute SCRIPT_5
						break 
					case 3
						execute SCRIPT_7
						break 
					case 0
						break 
			}
	}

._on_exit
	if(gamevar !is_room_cleared)
	 {
			switch(gamevar room_state)
			 {
					case 1
						execute SCRIPT_14
						if(var ! VAR_24)
						 {
								gamevar room_state ++ 
								gamevar is_room_cleared = int 1
						}
						else
						 {
								execute SCRIPT_16
						}
						break 
					case 2
						gamevar room_state ++ 
						gamevar is_room_cleared = int 1
						break 
					case 3
						gamevar room_state ++ 
						gamevar is_room_cleared = int 1
						break 
					case 0
						break 
					default 
						gamevar room_state = int 0
						break 
			}
	}

._SCRIPT_3
	if(var VAR_82 != var VAR_80)
	 {
			var VAR_82 = var VAR_80
			call log_var(var VAR_80)
	}
	execute SCRIPT_12
	switch(var VAR_80)
	 {
	}
	var VAR_81 ++ 
	var VAR_27 = var VAR_0
	if(var VAR_27 == int 1)
	 {
			var VAR_25 = var VAR_1
			if(var VAR_25 != var VAR_26)
			 {
					var VAR_26 = var VAR_25
					switch(var VAR_25)
					 {
							case 1
								var hoot_sound_ref = call play_loaded_sound(int 1, int 0, int 1, int 0)
								var DoorCls3_sound_ref = call play_loaded_sound(int 2, int -1, int 51, int 0)
								if(var DoorCls3_sound_ref != int -1)
								 {
										call func_fb(var DoorCls3_sound_ref, int 32050)
										call set_sound_volume(var DoorCls3_sound_ref, int 50)
								}
								break 
							case 11
								if(var DoorCls3_sound_ref != int -1)
								 {
										call stop_playing_sound(var DoorCls3_sound_ref)
								}
								break 
							case 30
								var bigfire_sound_ref = call play_loaded_sound(int 3, int 0, int 51, int 0)
								if(var bigfire_sound_ref != int -1)
								 {
										call set_sound_volume(var bigfire_sound_ref, int 50)
								}
								break 
					}
			}
	}

._SCRIPT_4
	call load_char("groad")
	call load_char("sentry")
	call load_char("litl_liz")
	execute SCRIPT_11
	execute SCRIPT_13

._SCRIPT_5

._SCRIPT_6

._SCRIPT_7

._SCRIPT_8

._SCRIPT_9
	execute SCRIPT_19

._SCRIPT_10

._SCRIPT_11
	gamevar SMACKER_X = int 288
	gamevar SMACKER_Y = int 1088
	call play_2d_anim("door", int 0, int 1, var &VAR_0)
	gamevar SMACKER_X = int 624
	gamevar SMACKER_Y = int 904
	call play_2d_anim("capstan", int 0, int 1, var &VAR_2)
	gamevar *scene_info_p+4 = int 16

._SCRIPT_12
	if(var ! VAR_36)
	 {
			exit_script 
	}
	switch(var VAR_84)
	 {
			case 0
				if(var VAR_85 > int 1)
				 {
						var VAR_2 = int 1
						var CellDoor_sound_ref = call play_loaded_sound(int 1, int -1, int 28, "")
						var VAR_84 ++ 
						var VAR_85 = int 0
				}
				break 
			case 1
				if(var VAR_3 == int 20)
				 {
						var VAR_0 = int 1
						gamevar *scene_info_p+4 = int 2
						var VAR_84 ++ 
						var VAR_85 = int 0
				}
				break 
			case 2
				if(var CellDoor_sound_ref != int -999)
				 {
						if(var VAR_2 == int -1)
						 {
								call log_string("stop capstan sfx")
								call stop_playing_sound(var CellDoor_sound_ref)
								var CellDoor_sound_ref = int -999
						}
				}
				if(var VAR_0 == int -1)
				 {
						call run_enemy_generator(var &enemy_gen_script, int 10)
						var VAR_84 ++ 
						var VAR_85 = int 0
				}
				break 
	}
	var VAR_85 ++ 

._SCRIPT_13

._SCRIPT_14
	var index = int 0
	var VAR_24 = int 0
	while(var VAR_73 < int 6)
	 {
			var VAR_24 += @arr[var VAR_73]
			var index ++ 
	}

._SCRIPT_15
	var index_1 = int 0
	var VAR_24 = int 0
	while(var VAR_89 < int 6)
	 {
			if(@arr[var VAR_89])
			 {
					if(call func_8a(@arr_1[var index_1]))
					 {
							gamevar compile_init_character = int 0
							var plagueman_catapult = call create_enemy(@arr_2[var index_1], var index_1, @arr_3[var index_1], @arr_4[var index_1])
							gamevar compile_init_character = int 1
							call set_char_init_state(var plagueman_catapult, int 13)
							call play_char_ai_script(var plagueman_catapult, @arr_5[var index_1])
							if(@arr_6[var index_1])
							 {
									call func_106(var plagueman_catapult, int 9, int 5, @arr_6[var index_1])
									call func_106(var plagueman_catapult, int 9, int 6, int 1)
							}
							else
							 {
									gamevar script_object = var plagueman_catapult
									gamevar *character_movement_p+60 = int 1
							}
							@arr[var index_1]= int 0
					}
			}
			var index_1 ++ 
	}

._SCRIPT_16
	call save_pos_to_room_memory(int 0, var arr, var VAR_58, var VAR_59)
	call save_pos_to_room_memory(int 1, var VAR_60, var VAR_61, var VAR_62)

._SCRIPT_17
	if(call func_bf(int 0, gamevar CURRENT_LEVEL, gamevar CURRENT_SCENE))
	 {
			call load_pos_from_room_memory(int 0, var &VAR_69)
			var arr = var VAR_70
			var VAR_58 = var VAR_71
			var VAR_59 = var VAR_72
	}
	if(call func_bf(int 1, gamevar CURRENT_LEVEL, gamevar CURRENT_SCENE))
	 {
			call load_pos_from_room_memory(int 1, var &VAR_69)
			var VAR_60 = var VAR_70
			var VAR_61 = var VAR_71
			var VAR_62 = var VAR_72
	}

._SCRIPT_18
	if(call ! is_char_handle_in_level(int 1507328 /* BTREASURE */ ))
	 {
			gamevar global_inventory_p = var &VAR_74
			call create_char(var &init_position, "btreasure", int 355, int 14)
	}
	if(call ! is_char_handle_in_level(int 1441792 /* MIMIC */ ))
	 {
			gamevar global_inventory_p = var &VAR_75
			call create_char(var &init_position1, "bmimic", int 205, int 17)
	}

._SCRIPT_19
	call load_sound_set(int 25)
	var blank_sound_ref = call play_loaded_sound(int 1, int -1, int 25, int 0)
	call set_sound_volume(var blank_sound_ref, int 12)
	var thunrumb_sound_ref = call play_loaded_sound(int 3, int -1, int 25, int 0)
	var VAR_5 = int 20
	call set_sound_volume(var thunrumb_sound_ref, var VAR_5)
	var VAR_4 = int 1

._SCRIPT_20
	if(var ! VAR_4)
	 {
			call log_string("random_rain_fx: Rain SFX not initialised! See Marc")
			exit_script 
	}
	switch(var VAR_9)
	 {
			case 0
				if(var VAR_7)
				 {
						var VAR_11 = int 0
						var VAR_9 ++ 
						var VAR_10 = int 0
				}
				break 
			case 1
				if(var VAR_5 < int 30)
				 {
						var VAR_12 = var VAR_10 % int 2
						if(var VAR_12 == int 0)
						 {
								var VAR_5 += var VAR_11
								call set_sound_volume(var thunrumb_sound_ref, var VAR_5)
						}
				}
				else
				 {
						var VAR_9 ++ 
						var VAR_10 = int 0
				}
				break 
			case 2
				if(var VAR_10 > int 150)
				 {
						var VAR_9 ++ 
						var VAR_10 = int 0
				}
				break 
			case 3
				if(var VAR_5 > int 20)
				 {
						var VAR_12 = var VAR_10 % int 2
						if(var VAR_12)
						 {
								var VAR_5 -= var VAR_11
								call set_sound_volume(var thunrumb_sound_ref, var VAR_5)
						}
				}
				else
				 {
						var VAR_7 = int 0
						var VAR_9 = int 0
						var VAR_10 = int 0
				}
				break 
	}
	execute SCRIPT_21
	var VAR_10 ++ 

._SCRIPT_21
	switch(var VAR_14)
	 {
			case 0
				var VAR_15 = int 0
				var VAR_16 = call randomize_int(int 1200, int 1801)
				var VAR_14 ++ 
				break 
			case 1
				if(var VAR_15 > var VAR_16)
				 {
						var thunstrk_sound_ref = call play_loaded_sound(int 4, int 0, int 25, int 0)
						call set_sound_volume(var thunstrk_sound_ref, call randomize_int(int 30, int 101))
						call func_11a(var thunstrk_sound_ref, int 10000 - call randomize_int(int 0, int 20001))
						if(var ! VAR_7)
						 {
								var VAR_7 = int 1
						}
						var VAR_14 ++ 
						var VAR_15 = int 0
				}
				break 
			case 2
				if(var VAR_15 > int 200)
				 {
						var VAR_14 = int 0
						var VAR_15 = int 0
				}
				break 
	}
	var VAR_15 ++ 

._SCRIPT_22
	switch(var VAR_18)
	 {
			case 0
				if(gamevar scene_counter > int 600)
				 {
						var VAR_18 ++ 
				}
				break 
			case 1
				var VAR_19 = int 0
				call reset_local_timer()
				var VAR_21 = call randomize_int(int 400, int 601)
				var VAR_18 ++ 
				break 
			case 2
				if(call is_local_timer_greater_than(var VAR_21))
				 {
						call apply_effect_on_char(gamevar misc_fx_scripts, int 6, int 0, int 0)
						call reset_local_timer()
						var VAR_22 = int 255
						var VAR_21 = call randomize_int(int 1, int 31)
						var VAR_19 = int 0
						var VAR_18 ++ 
				}
				break 
			case 3
				if(call is_local_timer_greater_than(var VAR_21))
				 {
						var VAR_22 -= int 4 * var VAR_21
						var verwind_sound_ref = call play_loaded_sound(int 5, int 0, int 25, int 0)
						call set_sound_volume(var verwind_sound_ref, var VAR_22)
						var VAR_21 = int 255 - var VAR_22
						var VAR_19 = int 0
						var VAR_18 ++ 
				}
				break 
			case 4
				if(var VAR_19 > var VAR_21)
				 {
						var verwind_sound_ref = call play_loaded_sound /* 'thunstrk' */ (int 4, int 0, int 25, int 0)
						call set_sound_volume(var verwind_sound_ref, var VAR_22)
						if(var ! VAR_7)
						 {
								var VAR_7 = int 1
						}
						var VAR_18 ++ 
						var VAR_19 = int 0
				}
				break 
			case 5
				if(var VAR_19 > int 100)
				 {
						var VAR_18 = int 1
						var VAR_19 = int 0
				}
				break 
	}
	var VAR_19 ++ 
