/*
* This file was auto-generated using 'silver-reversing-sct' tool
* to better understand the scripts presented, one is encouraged to
* view the catalogs at: 
* https://github.com/nadavshemesh/silver-reversing-sct/blob/master/docs/index.md
*
* Any further information and support of this project please visit:
* https://github.com/nadavshemesh/silver-reversing-sct 
*/


._DATA
	VAR_18	{ 0, 0, -1 }	
	VAR_23	-1	
	init_position	{ -533, -741, 1035 }	
	init_position1	{ -505, -741, 605 }	
	init_position2	{ -545, -741, 1456 }	
	VAR_46	{ -896, -741, 1050 }	
	VAR_49	{ 0, 0 }	
	VAR_53	{ 0, 0 }	
	VAR_57	{ 0, 0 }	
	VAR_62	{ -1125, -741, 2117, -1122, -741, 93 }	
	walk_position	{ -2183, -741, 2373 }	
	VAR_69	{ 0, 0 }	
	init_position3	{ -2162, -741, -241 }	
	VAR_74	{ -1397, 2000, 1091 }	
	VAR_76	{ 0, 18, 0 }	

._on_load
	call load_sound_set(int 83)
	call load_sound_set(int 72)
	call load_sound_set(int 64)

	 /* play the sound 'cavelp' */ 
	call play_loaded_sound(int 1, int -1, int 64, int 0)
	call load_sound_set(int 65)

	 /* play the sound 'in2wind1' */ 
	call play_loaded_sound(int 5, int -1, int 65, int 0)
	execute SCRIPT_10
	if(gamevar is_room_cleared)
	 {
			execute SCRIPT_9
	}
	else
	 {
			switch(gamevar room_state)
			 {
			}
	}

._infinite_loop
	execute SCRIPT_3
	var VAR_0 = int 20
	execute SCRIPT_11
	if(gamevar !is_room_cleared)
	 {
			switch(gamevar room_state)
			 {
			}
	}

._on_exit
	execute SCRIPT_12
	if(gamevar !is_room_cleared)
	 {
			switch(gamevar room_state)
			 {
			}
	}

._SCRIPT_3
	if(gamevar script_time > var VAR_77)
	 {
			var VAR_77 = gamevar script_time + int 70 + call randomize_int(int 0, int 110)

			 /* play the sound 'renddizz' */ 
			call play_loaded_sound(int 8, int 0, int 72, int 0)
	}
	if(gamevar script_time > var VAR_78)
	 {
			var VAR_78 = gamevar script_time + int 100 + call randomize_int(int 0, int 50)

			 /* play the sound 'wwindlp' */ 
			call play_loaded_sound(int 6, int 0, int 65, int 0)
	}

._SCRIPT_4
	execute SCRIPT_6
	switch(var VAR_60)
	 {
			case 0
				if(call func_d1(var &VAR_62))
				 {
						call log("projectile crossed tripwire")
						var VAR_63 = int 1
				}
				if(call func_8a(var &VAR_62))
				 {
						call log("hero crossed tripwire")
						var VAR_63 = int 1
				}
				if(var VAR_63)
				 {
						if(call is_char_handle_in_level(int 11075585))
						 {
								call func_2(var mini_maimip)
								gamevar script_object = var mini_maimip
								gamevar *character_stats_p+15 = int 20000
						}
						if(call is_char_handle_in_level(int 11075586))
						 {
								call func_2(var mini_maimip1)
								gamevar script_object = var mini_maimip1
								gamevar *character_stats_p+15 = int 20000
						}
						if(call is_char_handle_in_level(int 11075587))
						 {
								call func_2(var mini_maimip2)
								gamevar script_object = var mini_maimip2
								gamevar *character_stats_p+15 = int 20000
						}
						var VAR_60 ++ 
						var VAR_61 = int 0
				}
				else
				 {
						if(call get_num_of_enemies() == int 0)
						 {
								var VAR_60 ++ 
								var VAR_61 = int 0
						}
				}
				break 
			case 1
				execute SCRIPT_7
				break 
	}
	var VAR_61 ++ 

._SCRIPT_5
	var mini_maimip = call create_enemy(int 211, int 1, var &init_position, int 225)
	gamevar script_object = var mini_maimip
	gamevar *object_p+6 |= int 1048576
	var mini_maimip1 = call create_enemy(int 211, int 2, var &init_position1, int 225)
	gamevar script_object = var mini_maimip1
	gamevar *object_p+6 |= int 1048576
	var mini_maimip2 = call create_enemy(int 211, int 3, var &init_position2, int 225)
	gamevar script_object = var mini_maimip2
	gamevar *object_p+6 |= int 1048576
	call func_1(var mini_maimip, int -1)
	call func_1(var mini_maimip1, int -1)
	call func_1(var mini_maimip2, int -1)
	gamevar SMACKER_X = int 0
	gamevar SMACKER_Y = int 227
	var VAR_47 = call play_2d_anim("switch", int 10737418, int 1, var &VAR_48)
	var VAR_48 ++ 
	gamevar SMACKER_X = int 216
	gamevar SMACKER_Y = int 0
	var VAR_51 = call play_2d_anim("oilboil", int 10737418, int 1, var &VAR_52)
	gamevar SMACKER_X = int 264
	gamevar SMACKER_Y = int 152
	var VAR_55 = call play_2d_anim("door", int 10737418, int 1, var &VAR_56)
	call load_char("chronicl")
	gamevar *scene_info_p+4 = int 16

._SCRIPT_6
	if(var VAR_39)
	 {
			gamevar pnc_look_use_mask = int 2
			exit_script 
	}
	switch(var VAR_66)
	 {
			case 0
				if(gamevar global_collision_type == int 18)
				 {
						gamevar global_collision_type = int 0
						var VAR_66 = int 2
						var VAR_67 = int 0
						break 
				}
				if(gamevar global_zone_type == int 18)
				 {
						gamevar global_zone_type = int 0
						var VAR_69 = gamevar control_char_p
						call set_char_running(var VAR_69)
						call char_walk_to_pos(var VAR_69, var &walk_position)
						var VAR_66 = int 1
						var VAR_67 = int 0
						break 
				}
				break 
			case 1
				gamevar global_collision_type = int 0
				gamevar global_zone_type = int 0
				if(call is_char_standing(var VAR_69))
				 {
						if(call is_char_at_pos(var VAR_69, var &walk_position, int 100))
						 {
								var VAR_66 = int 2
								var VAR_67 = int 0
						}
						else
						 {
								var VAR_66 = int 0
								var VAR_67 = int 0
						}
				}
				break 
			case 2
				gamevar global_collision_type = int 0
				gamevar global_zone_type = int 0
				gamevar script_object = var VAR_47
				gamevar *smack_object_p+2 &= int -1073741
				var VAR_48 = int 1
				gamevar script_object = var VAR_51
				gamevar *smack_object_p+2 &= int -1073741
				var VAR_52 = int 1
				var VAR_66 ++ 
				var VAR_67 = int 0
				break 
			case 3
				gamevar global_zone_type = int 0
				gamevar global_collision_type = int 0
				if(var VAR_49 == int 40&&var VAR_67 > int 10)
				 {
						gamevar script_object = var VAR_47
						var VAR_48 = int 0
						var VAR_66 ++ 
						var VAR_67 = int 0
				}
				break 
			case 4
				gamevar global_zone_type = int 0
				gamevar global_collision_type = int 0
				if(var VAR_53 == int 50&&var VAR_70 == int 0)
				 {
						call apply_effect_on_char(gamevar misc_fx_scripts, int 8, var &VAR_46, call is_char_handle_in_level(int 65536 /* DAVID */ ))
						var VAR_70 = int 1
				}
				if(var VAR_53 == int 51)
				 {
						var VAR_70 = int 0
				}
				if(var VAR_53 == int 150)
				 {
						gamevar script_object = var VAR_51
						var VAR_52 = int 0
						var VAR_66 = int 0
						var VAR_67 = int 0
				}
				break 
	}
	var VAR_67 ++ 

._SCRIPT_7
	if(var VAR_52 != int 0)
	 {
			exit_script 
	}
	switch(var VAR_71)
	 {
			case 0
				if(call get_num_of_enemies() == int 0)
				 {
						var VAR_39 = int 1
						gamevar script_object = var VAR_55
						gamevar *smack_object_p+2 &= int -1073741
						var VAR_56 = int 1
						var VAR_75 = call put_item_in_position(var &VAR_74, int 84, int 0, int 0)
						call func_9c(var VAR_75, var &VAR_76)
						var VAR_71 ++ 
				}
				break 
			case 1
				var VAR_72 ++ 
				if(var VAR_72 > int 120)
				 {
						var VAR_71 ++ 
						gamevar *scene_info_p+4 = int 2
						gamevar *scene_info_p+1 = int 1
						var fade_chronicler = call create_enemy(int 178, int 0, var &init_position3, int 340)
				}
				break 
	}

._SCRIPT_8
	var VAR_79 = var VAR_48
	if(var VAR_79 == int 1)
	 {
			var VAR_80 = var VAR_49
			if(var VAR_80 != var VAR_81)
			 {
					var VAR_81 = var VAR_80
					switch(var VAR_80)
					 {
							case 1

								 /* play the sound 'rusty' */ 
								call play_loaded_sound(int 1, int 0, int 83, int 0)
								break 
							case 8

								 /* play the sound 'lift' */ 
								call play_loaded_sound(int 3, int 0, int 83, int 0)
								break 
							case 30

								 /* play the sound 'steam' */ 
								call play_loaded_sound(int 2, int 0, int 83, int 0)
								break 
					}
			}
	}
	var VAR_79 = var VAR_52
	if(var VAR_79 == int 1)
	 {
			var VAR_84 = var VAR_53
			if(var VAR_84 != var VAR_85)
			 {
					var VAR_85 = var VAR_84
					switch(var VAR_84)
					 {
							case 1
								var liftstop_sound_ref = call play_loaded_sound(int 4, int -1, int 83, int 0)
								break 
							case 40
								var firedome_sound_ref = call play_loaded_sound(int 6, int -1, int 83, int 0)
								var fireeq_sound_ref = call play_loaded_sound(int 7, int -1, int 83, int 0)
								break 
							case 50

								 /* play the sound 'firewhs' */ 
								call play_loaded_sound(int 9, int 0, int 83, int 0)

								 /* play the sound 'fireimpe' */ 
								call play_loaded_sound(int 10, int 0, int 83, int 0)
								break 
							case 60
								if(var liftstop_sound_ref != int -1)
								 {
										call stop_playing_sound(var liftstop_sound_ref)
								}
								break 
							case 92

								 /* play the sound 'gateopen' */ 
								call play_loaded_sound(int 11, int 0, int 83, int 0)
								break 
							case 100

								 /* play the sound 'firejet' */ 
								call play_loaded_sound(int 8, int 0, int 83, int 0)
								if(var firedome_sound_ref != int -1)
								 {
										call stop_playing_sound(var firedome_sound_ref)
								}
								if(var fireeq_sound_ref != int -1)
								 {
										call stop_playing_sound(var fireeq_sound_ref)
								}
								break 
							case 125
								var liftstop1_sound_ref = call play_loaded_sound(int 4, int -1, int 83, int 0)
								break 
							case 149
								if(var liftstop1_sound_ref != int -1)
								 {
										call stop_playing_sound(var liftstop1_sound_ref)
								}

								 /* play the sound 'blddrain' */ 
								call play_loaded_sound(int 5, int 0, int 83, int 0)
								break 
					}
			}
	}
	var VAR_79 = var VAR_56
	if(var VAR_79 == int 1)
	 {
			var VAR_82 = var VAR_57
			if(var VAR_82 != var VAR_83)
			 {
					var VAR_83 = var VAR_82
					switch(var VAR_82)
					 {
							case 1

								 /* play the sound 'undoor' */ 
								call play_loaded_sound(int 12, int 0, int 83, int 0)
								var doorcls3_sound_ref = call play_loaded_sound(int 13, int -1, int 83, int 0)
								break 
							case 25

								 /* play the sound 'telelift' */ 
								call play_loaded_sound(int 14, int 0, int 83, int 0)
								if(var doorcls3_sound_ref != int -1)
								 {
										call stop_playing_sound(var doorcls3_sound_ref)
								}
								break 
					}
			}
	}

._SCRIPT_9
	gamevar pnc_look_use_mask = int 2

._SCRIPT_10
	if(call ! is_char_handle_in_level(int 6291456 /* CHRONICL */ ))
	 {
			exit_script 
	}
	else
	 {
			if(var fade_chronicler == int 0)
			 {
					var fade_chronicler = call get_char_handle(int 6291456)
			}
	}

._SCRIPT_11
	if(call ! is_char_handle_in_level(int 6291456 /* CHRONICL */ ))
	 {
			exit_script 
	}
	else
	 {
			if(var fade_chronicler == int 0)
			 {
					var fade_chronicler = call get_char_handle(int 6291456)
			}
	}
	if(var VAR_23 != var VAR_17)
	 {
			var VAR_23 = var VAR_17
			call log_obj(var VAR_17)
	}
	switch(var VAR_17)
	 {
			case 0
				if(gamevar chronicler_variation != int -1)
				 {
						execute SCRIPT_13
				}
				gamevar script_object = var fade_chronicler
				var VAR_20 = gamevar *character_movement_p+3
				var VAR_21 = gamevar *character_movement_p+4
				var VAR_22 = gamevar *character_movement_p+5
				var VAR_3 = int 0
				call func_10c(var fade_chronicler, int 0)
				var VAR_17 ++ 
				var VAR_18 = int 0
				break 
			case 1
				if(call func_127(var fade_chronicler))
				 {
						var VAR_19 = gamevar saved_games_count
						var VAR_3 = int 1
						var VAR_17 ++ 
						var VAR_18 = int 0
				}
				break 
			case 2
				if(call get_input_sys() != int 4)
				 {
						call set_input_system(int 2)
						var VAR_17 ++ 
						var VAR_18 = int 0
				}
				break 
			case 3
				if(var VAR_18 > int 40)
				 {
						call open_save_screen(var VAR_0)
						var VAR_17 ++ 
						var VAR_18 = int 0
				}
				break 
			case 4
				if(var VAR_18 > int 10)
				 {
						if(gamevar !current_menu_level_p)
						 {
								var VAR_17 ++ 
								var VAR_18 = int 0
						}
				}
				break 
			case 5
				if(var VAR_19 != gamevar saved_games_count)
				 {
						call log("game saved")
						call func_11d()
						var VAR_17 = int 7
						var VAR_18 = int 0
				}
				else
				 {
						call log("game not saved")
						call func_2a(var fade_chronicler, var &VAR_20)
						execute SCRIPT_14
						gamevar chronicler_variation = var VAR_2
						var VAR_17 ++ 
						var VAR_18 = int 0
				}
				break 
			case 6
				if(var VAR_18 > int 30)
				 {
						call set_input_system(int 1)
						gamevar clicked_character = int 0
						var VAR_3 = int 0
						var VAR_17 = int 1
						var VAR_18 = int 0
				}
				break 
			case 7
				if(var VAR_18 > int 40)
				 {
						call apply_effect_on_char(gamevar char_gen_fx_scripts, int 8, int 0, var fade_chronicler)
						execute SCRIPT_14
						gamevar chronicler_variation = var VAR_2
						var VAR_17 ++ 
						var VAR_18 = int 0
				}
				break 
			case 8
				if(var VAR_18 > int 100)
				 {
						call remove_char(var fade_chronicler)
						call set_input_system(int 1)
						var VAR_3 = int 0
						var VAR_17 ++ 
						var VAR_18 = int 0
				}
				break 
	}
	var VAR_18 ++ 

._SCRIPT_12
	if(call is_char_handle_in_level(int 6291456 /* CHRONICL */ ))
	 {
			if(var fade_chronicler == int 0)
			 {
					var fade_chronicler = call get_char_handle(int 6291456)
			}
			call func_34(var fade_chronicler)
	}

._SCRIPT_13
	var VAR_4 = call get_char_handle_id(gamevar control_char_p)
	switch(var VAR_4)
	 {
			case 65536
				call load_dialog_by_number("DVDCHR", "NULL", gamevar chronicler_variation)
				break 
			case 786432
				call load_dialog_by_number("SEKCHR", "NULL", gamevar chronicler_variation)
				break 
			case 262144
				call load_dialog_by_number("CAGCHR", "NULL", gamevar chronicler_variation)
				break 
			case 327680
				call load_dialog_by_number("JUGCHR", "NULL", gamevar chronicler_variation)
				break 
			case 131072
				call load_dialog_by_number("CHICHR", "NULL", gamevar chronicler_variation)
				break 
			case 196608
				call load_dialog_by_number("VIVCHR", "NULL", gamevar chronicler_variation)
				break 
	}

._SCRIPT_14
	var VAR_26 = call get_char_handle_id(gamevar control_char_p)
	switch(var VAR_26)
	 {
			case 65536
				var VAR_2 = call load_next_dialog("DVDCHR", "NULL")
				break 
			case 786432
				var VAR_2 = call load_next_dialog("SEKCHR", "NULL")
				break 
			case 262144
				var VAR_2 = call load_next_dialog("CAGCHR", "NULL")
				break 
			case 327680
				var VAR_2 = call load_next_dialog("JUGCHR", "NULL")
				break 
			case 131072
				var VAR_2 = call load_next_dialog("CHICHR", "NULL")
				break 
			case 196608
				var VAR_2 = call load_next_dialog("VIVCHR", "NULL")
				break 
	}
