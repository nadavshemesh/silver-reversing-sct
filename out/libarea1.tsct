/*
* This file was auto-generated using 'silver-reversing-sct' tool
* to better understand the scripts presented, one is encouraged to
* view the catalogs at: 
* https://github.com/nadavshemesh/silver-reversing-sct/blob/master/docs/index.md
*
* Any further information and support of this project please visit:
* https://github.com/nadavshemesh/silver-reversing-sct 
*/


._DATA
	DAVID1	0	
	init_position	{ -11000, 1250, -12050 }	
	init_position1	{ -9329, 1250, -15047 }	
	init_position2	{ -8546, 1250, -14898 }	
	init_position3	{ -8713, 1250, -15047 }	
	init_position4	{ -8937, 1250, -14860 }	
	VAR_29	0	
	VAR_30	0	
	init_position5	{ -8159, 1202, -12023 }	
	ai_script	{ 5, 300, 15, 29, DAVID1, 1, DAVID1, 32, VAR_33, VAR_34, 16, VAR_30, 1, 4, VAR_29, 14, 0, -8193, 1203, -12014, 2, -8125, 1203, -11964, 28, VAR_35, 5, 0, 0, -9102, 1203, -11980, 2, -8981, 1203, -11981, 28, VAR_36, 5, 0, 0, -10650, 1203, -11984, 2, -10654, 1947, -11963, 28, VAR_37, 5, 0, 0, -11524, 1203, -11988, 2, -11471, 2068, -11963, 28, VAR_38, 5, 0, 0, -11587, 1203, -14435, 2, -11578, 1203, -14447, 28, VAR_39, 5, 0, 0, -10631, 1203, -14405, 2, -10624, 2023, -14472, 28, VAR_40, 5, 0, 0, -9009, 1203, -14395, 2, -9002, 2019, -14472, 28, VAR_41, 5, 0, 0, -7957, 1203, -14366, 2, -8077, 2036, -14472, 28, VAR_42, 5, 0, 6, 8, 0, 8 }	
	VAR_33	"DVDWIT"	
	VAR_34	"NULL"	
	VAR_35	"impread"	
	VAR_36	"impread"	
	VAR_37	"impread"	
	VAR_38	"impread"	
	VAR_39	"impread"	
	VAR_40	"impread"	
	VAR_41	"impread"	
	VAR_42	"impread"	

._on_load
	call play_bgm("GNO")
	call load_sound_set(int 63)

	 /* play the sound 'gnoamb1' */ 
	call play_loaded_sound(int 1, int -1, int 63, int 0)
	if(gamevar is_room_cleared)
	 {
			execute SCRIPT_4
	}
	else
	 {
			switch(gamevar room_state)
			 {
					case 1
						execute SCRIPT_5
						break 
					case 2
						execute SCRIPT_11
						break 
					case 3
						execute SCRIPT_13
						break 
					case 0
						break 
			}
	}

._infinite_loop
	execute SCRIPT_3
	if(gamevar !is_room_cleared)
	 {
			switch(gamevar room_state)
			 {
					case 1
						execute SCRIPT_6
						break 
					case 2
						execute SCRIPT_12
						break 
					case 3
						execute SCRIPT_14
						break 
					case 0
						break 
			}
	}

._on_exit
	if(gamevar !is_room_cleared)
	 {
			switch(gamevar room_state)
			 {
					case 1
						call load_dialog_by_number("DVDGRA", "NULL", int 1)
						gamevar room_state ++ 
						gamevar is_room_cleared = int 1
						break 
					case 2
						gamevar room_state ++ 
						break 
					case 3
						break 
					case 0
						break 
					default 
						gamevar room_state = int 0
						break 
			}
	}

._SCRIPT_3
	if(gamevar script_time > var VAR_49)
	 {
			var VAR_49 = gamevar script_time + int 600 + call randomize_int(int 0, int 400)
			var VAR_47 = int 5 + call randomize_int(int 0, int 4)
			call play_loaded_sound(var VAR_47, int 0, int 63, int 0)
	}
	if(gamevar script_time > var VAR_50)
	 {
			var VAR_50 = gamevar script_time + int 250 + call randomize_int(int 0, int 150)
			var VAR_47 = int 9 + call randomize_int(int 0, int 4)
			call play_loaded_sound(var VAR_47, int 0, int 63, int 0)
	}
	if(gamevar script_time > var VAR_48)
	 {
			var VAR_48 = gamevar script_time + int 300 + call randomize_int(int 0, int 200)
			var VAR_47 = int 2 + call randomize_int(int 0, int 3)
			call play_loaded_sound(var VAR_47, int 0, int 63, int 0)
	}
	if(gamevar script_time > var VAR_51)
	 {
			var VAR_51 = gamevar script_time + int 100 + call randomize_int(int 0, int 200)
			if(call get_num_of_enemies())
			 {

					 /* play the sound 'cavelp' */ 
					call play_loaded_sound(int 13, int 0, int 63, int 0)
			}
	}

._SCRIPT_4
	call func_108("ARSE")

._SCRIPT_5
	var VAR_5 = int 0
	call set_input_system(int 2)
	execute SCRIPT_10
	execute SCRIPT_7
	execute SCRIPT_8
	execute SCRIPT_9

._SCRIPT_6
	var VAR_5 ++ 
	if(var VAR_4 == int 0)
	 {
			var VAR_4 = int 1
	}
	if(var VAR_4 == int 1)
	 {
			if(var VAR_5 == int 4)
			 {
					call play_char_anim(var nwhittle, var impread_anim, int 0)
					var VAR_6 = int 600
					var VAR_7 = int 3
					var VAR_4 = int 2
					gamevar scene_counter = int 0
			}
	}
	if(var VAR_4 == int 2)
	 {
			if(var VAR_5 == int 100)
			 {
					call func_100(call get_char_movement_ptr(var nwhittle))
			}
			if(var VAR_6 > int 0)
			 {
					var VAR_6 -- 
					if(call func_5c(var nwhittle))
					 {
							call play_char_anim(var nwhittle, var impread_anim, int 0)
					}
					var VAR_8 = var VAR_6 % int 84
					if(var VAR_8 == int 0)
					 {
							var VAR_7 -- 
							if(var VAR_7 == int 0)
							 {
									var VAR_7 = int 3
									call play_char_anim(var nwhittle, var confused_anim, int 0)
							}
					}
			}
			else
			 {
					call set_char_running(var neutral_imp)
					call char_walk_to(var neutral_imp, int -9740, int 1250, int -14230)
					var VAR_4 = int 3
					call func_100(call get_char_movement_ptr(var neutral_imp))
			}
	}
	if(var VAR_4 == int 3)
	 {
			if(call is_char_standing(var neutral_imp))
			 {
					var VAR_4 = int 4
					call play_char_anim(var neutral_imp, var come_anim, int 0)
					call set_char_running(var neutral_imp1)
					call char_walk_to(var neutral_imp1, int -11000, int 1250, int -12050)
					call set_char_running(var neutral_imp2)
					call char_walk_to(var neutral_imp2, int -11000, int 1250, int -12050)
					call set_char_running(var neutral_imp3)
					call char_walk_to(var neutral_imp3, int -11000, int 1250, int -12050)
			}
	}
	if(var VAR_4 == int 4)
	 {
			if(call func_5c(var neutral_imp))
			 {
					call set_char_running(var neutral_imp)
					call char_walk_to(var neutral_imp, int -11000, int 1250, int -12050)
					call func_36(var nwhittle, int -9740, int 1250, int -14230)
					var VAR_6 = int 60
					var VAR_4 = int 5
			}
	}
	if(var VAR_4 == int 5)
	 {
			var VAR_6 -- 
			if(var VAR_6 == int 0)
			 {
					call func_100(call get_char_movement_ptr(var nwhittle))
					call set_char_running(var nwhittle)
					call char_walk_to(var nwhittle, int -13550, int 1250, int -13388)
					var VAR_6 = int 100
					var VAR_4 = int 6
			}
	}
	if(var VAR_4 == int 6)
	 {
			var VAR_6 -- 
			if(var VAR_6 == int 90)
			 {
					call char_walk_to(var neutral_imp, int -12093, int 1250, int -13444)
			}
			if(var VAR_6 == int 80)
			 {
					call char_walk_to(var neutral_imp1, int -12160, int 1250, int -13543)
			}
			if(var VAR_6 == int 60)
			 {
					call char_walk_to(var neutral_imp2, int -12017, int 1250, int -13292)
			}
			if(var VAR_6 == int 40)
			 {
					call char_walk_to(var neutral_imp3, int -12136, int 1250, int -13240)
			}
			if(var VAR_6 == int 0)
			 {
					var VAR_4 = int 8
			}
	}
	if(var VAR_4 == int 8)
	 {
			if(call is_char_standing(var neutral_imp))
			 {
					call func_36(var neutral_imp, int -13550, int 1250, int -13388)
					var VAR_6 = int 90
					var VAR_4 = int 7
					call log_obj(var VAR_4)
			}
	}
	if(var VAR_4 == int 7)
	 {
			var VAR_6 -- 
			if(var VAR_6 == int 0)
			 {
					call log_obj(var VAR_4)
					var VAR_6 = int 120
					var VAR_4 = int 9
			}
	}
	if(var VAR_4 == int 9)
	 {
			var VAR_6 -- 
			if(var VAR_6 == int 90)
			 {
					call func_2b(var neutral_imp, int 2)
			}
			if(var VAR_6 == int 80)
			 {
					call func_2b(var neutral_imp2, int 2)
			}
			if(var VAR_6 == int 50)
			 {
					var DAVID = call get_char_handle(int 65536)
					call func_100(call get_char_movement_ptr(var DAVID))
					call set_input_system(int 1)
			}
			if(var VAR_6 == int 30)
			 {
					call func_2b(var neutral_imp1, int 2)
			}
			if(var VAR_6 == int 10)
			 {
					call func_2b(var neutral_imp3, int 2)
			}
			if(var VAR_6 == int 0)
			 {
					call log("the end")
					call remove_char(var neutral_imp)
					call remove_char(var neutral_imp2)
					call remove_char(var neutral_imp1)
					call remove_char(var neutral_imp3)
					var VAR_4 ++ 
			}
	}

._SCRIPT_7
	var nwhittle = call create_char(var &init_position, "nwhittle", int 0, int 13)
	gamevar script_object = var nwhittle
	gamevar *character_movement_p+60 = int 1

._SCRIPT_8
	var neutral_imp = call create_enemy(int 102, int 0, var &init_position1, int 0)
	gamevar script_object = var neutral_imp
	gamevar *character_movement_p+60 = int 1
	call freeze_enemy(var neutral_imp)
	call func_f(var neutral_imp, int 131072)
	gamevar script_object = var neutral_imp
	gamevar *object_p+6 |= int 8388608

._SCRIPT_9
	var neutral_imp1 = call create_enemy(int 102, int 1, var &init_position2, int 0)
	gamevar script_object = var neutral_imp1
	gamevar *character_movement_p+60 = int 1
	call func_f(var neutral_imp1, int 131072)
	gamevar script_object = var neutral_imp1
	gamevar *object_p+6 |= int 8388608
	var neutral_imp2 = call create_enemy(int 102, int 2, var &init_position3, int 0)
	gamevar script_object = var neutral_imp2
	gamevar *character_movement_p+60 = int 1
	call func_f(var neutral_imp2, int 131072)
	gamevar script_object = var neutral_imp2
	gamevar *object_p+6 |= int 8388608
	var neutral_imp3 = call create_enemy(int 102, int 3, var &init_position4, int 0)
	gamevar script_object = var neutral_imp3
	gamevar *character_movement_p+60 = int 1
	call func_f(var neutral_imp3, int 131072)
	gamevar script_object = var neutral_imp3
	gamevar *object_p+6 |= int 8388608
	call freeze_enemy(var neutral_imp1)
	call freeze_enemy(var neutral_imp2)
	call freeze_enemy(var neutral_imp3)

._SCRIPT_10
	var impread_anim = call load_anim("impread")
	var confused_anim = call load_anim("confused")
	var come_anim = call load_anim("come")

._SCRIPT_11
	var nwhittle = call create_char(var &init_position5, "nwhittle", int 342, int 13)
	var DAVID1 = call get_char_handle(int 65536)
	call set_input_system(int 2)

._SCRIPT_12
	switch(var VAR_44)
	 {
			case 0
				if(var VAR_45 > int 100)
				 {
						call func_50(var nwhittle, int 8192)
						call play_char_ai_script(var nwhittle, var &ai_script)
						var VAR_44 ++ 
						var VAR_45 = int 0
				}
				break 
			case 1
				if(var VAR_30)
				 {
						var VAR_44 ++ 
						var VAR_45 = int 0
				}
				break 
			case 2
				if(call get_input_sys() != int 4)
				 {
						var VAR_29 = int 1
						call set_input_system(int 1)
						call save_pos_to_room_memory(int 888, int 1, int 1, int 1)
						var VAR_44 ++ 
						var VAR_45 = int 0
				}
				break 
	}
	var VAR_45 ++ 

._SCRIPT_13

._SCRIPT_14
