/*
* This file was auto-generated using 'silver-reversing-sct' tool
* to better understand the scripts presented, one is encouraged to
* view the catalogs at: 
* https://github.com/nadavshemesh/silver-reversing-sct/blob/master/docs/index.md
*
* Any further information and support of this project please visit:
* https://github.com/nadavshemesh/silver-reversing-sct 
*/


._DATA
	arr	{ 0, 0, 0 }	
	VAR_5	{ 0, 0, 0 }	
	init_position	{ 3021, -2230, 1316 }	
	ai_script	{ 0, 3527, -2230, 2093, 2, 3354, -2080, 2220, 3, VAR_10, 0, 11, 100, 200, 0, 3900, -2230, 2168, 2, 4252, -2100, 2172, 3, VAR_11, 0, 11, 100, 200, 0, 3016, -2230, 1310, 3, VAR_12, 0, 11, 100, 200, 7, 8 }	
	VAR_10	"bigsigh"	
	VAR_11	"head_nod"	
	VAR_12	"head_sad"	
	VAR_13	{ 0, 0, 0, 0 }	
	VAR_15	{ 3615, -2195, 1218 }	
	VAR_21	{ 3838, -2230, 1583 }	
	VAR_22	"zJ|"	
	VAR_23	{ 3636, -2230, 1424 }	
	arr_1	"NQT"	
	position	{ 3836, -2230, 1234 }	
	VAR_42	{ 0, 0 }	
	VAR_43	{ 0, 0, 0, 0 }

._on_load
	call stop_bgm(int 1)
	execute SCRIPT_12
	call load_sound_set(int 58)
	if(gamevar is_room_cleared)
	 {
			execute SCRIPT_9
	}
	else
	 {
			switch(gamevar room_state)
			 {
					case 1
						execute SCRIPT_4
						break 
					case 2
						execute SCRIPT_6
						break 
					case 3
						execute SCRIPT_8
						break 
					case 0
						break 
			}
	}

._infinite_loop
	if(gamevar !is_room_cleared)
	 {
			switch(gamevar room_state)
			 {
					case 1
						execute SCRIPT_3
						break 
					case 2
						execute SCRIPT_5
						break 
					case 3
						execute SCRIPT_7
						break 
					case 0
						break 
			}
	}

._on_exit
	if(gamevar !is_room_cleared)
	 {
			switch(gamevar room_state)
			 {
					case 1
						if(var VAR_0)
						 {
								gamevar room_state = int 3
								gamevar is_room_cleared = int 1
						}
						else
						 {
								if(var VAR_1)
								 {
										if(call ! func_bf(int 303, gamevar CURRENT_LEVEL, gamevar CURRENT_SCENE))
										 {
												call save_pos_to_room_memory(int 303, int 1, int 0, int 0)
										}
								}
								gamevar room_state ++ 
						}
						break 
					case 2
						if(var VAR_0)
						 {
								gamevar room_state ++ 
								gamevar is_room_cleared = int 1
						}
						else
						 {
								if(var VAR_1)
								 {
										if(call ! func_bf(int 303, gamevar CURRENT_LEVEL, gamevar CURRENT_SCENE))
										 {
												call save_pos_to_room_memory(int 303, int 1, int 0, int 0)
										}
								}
						}
						break 
					case 3
						gamevar room_state ++ 
						gamevar is_room_cleared = int 1
						break 
					case 0
						break 
					default 
						gamevar room_state = int 0
						break 
			}
	}

._SCRIPT_3
	switch(var VAR_18)
	 {
			case 0
				if(var VAR_19 > int 10)
				 {
						var index = int 0
						while(var VAR_20 < int 3)
						 {
								if(@arr[var VAR_20])
								 {
										call char_stop(@arr[var index])
								}
								var index ++ 
						}
						var VAR_18 ++ 
						var VAR_19 = int 0
				}
				break 
			case 1
				if(var VAR_19 > int 100)
				 {
						var VAR_5 = int 1
						var VAR_16 = call func_ec(int 106, int 0, int 0, var &VAR_15)
						var imptalk2_sound_ref = call play_loaded_sound(int 90, int 0, int 0, int 0)
						if(var imptalk2_sound_ref != int -1)
						 {
								call set_sound_volume(var imptalk2_sound_ref, int 70)
						}
						if(var VAR_16 != int -1)
						 {
								call func_fb(var VAR_16, int 10050)
						}
						var VAR_18 ++ 
						var VAR_19 = int 0
				}
				break 
			case 2
				if(var VAR_5 == int -1)
				 {
						var index = int 0
						while(var index < int 3)
						 {
								if(@arr[var index])
								 {
										call set_char_running(@arr[var index])
										call char_walk_to_pos(@arr[var index], @arr_1[var index])
								}
								var index ++ 
						}
						var VAR_18 ++ 
						var VAR_19 = int 0
				}
				break 
			case 3
				var index = int 0
				while(var index < int 3)
				 {
						if(@arr[var index])
						 {
								if(!arr_2[var index])
								 {
										if(call is_char_standing(@arr[var index]))
										 {
												call char_turn_to_pos(@arr[var index], call get_char_pos(var nmoss))
												@arr_2[var index]= int 1
										}
								}
						}
						else
						 {
								@arr_2[var index]= int 1
						}
						var index ++ 
				}
				if(var arr_2&&var VAR_26&&var VAR_27)
				 {
						call set_input_system(int 1)
						var VAR_18 ++ 
						var VAR_19 = int 0
				}
				break 
			case 4
				execute SCRIPT_13
				break 
	}
	var VAR_19 ++ 

._SCRIPT_4
	execute SCRIPT_10
	execute SCRIPT_11
	call set_input_system(int 2)

._SCRIPT_5
	switch(var VAR_42)
	 {
	}

._SCRIPT_6
	execute SCRIPT_11

._SCRIPT_7

._SCRIPT_8

._SCRIPT_9
	if(call func_bf(int 303, gamevar CURRENT_LEVEL, gamevar CURRENT_SCENE))
	 {
			call load_pos_from_room_memory(int 303, var &VAR_43)
	}

._SCRIPT_10
	gamevar SMACKER_X = int 376
	gamevar SMACKER_Y = int 224
	call play_2d_anim("moss", int 0, int 1, var &VAR_5)

._SCRIPT_11
	var nmoss = call create_char(var &init_position, "nmoss", int 130, int 13)
	call func_50(var nmoss, int 8192)
	call play_char_ai_script(var nmoss, var &ai_script)
	if(call func_bf(int 303, gamevar CURRENT_LEVEL, gamevar CURRENT_SCENE))
	 {
			call load_pos_from_room_memory(int 303, var &VAR_13)
			var VAR_1 = int 1
	}

._SCRIPT_12
	var VAR_2 = int 0
	var david = call get_david_char()
	while(var david)
	 {
			@arr[var VAR_2]= var david
			var VAR_2 ++ 
			var david = call get_next_char_from_list()
	}

._SCRIPT_13
	switch(var VAR_28)
	 {
			case 0
				if(var VAR_1)
				 {
						call func_10c(var nmoss, "DOGSEYES")
						var VAR_28 = int 2
						var VAR_29 = int 0
				}
				else
				 {
						if(call func_65(var nmoss, int 13) == int 17)
						 {
								call func_1(var nmoss, int 8192)
								var VAR_1 = int 1
								var VAR_28 ++ 
								var VAR_29 = int 0
						}
				}
				break 
			case 1
				if(call get_input_sys() != int 4)
				 {
						call func_2(var nmoss)
						call func_10c(var nmoss, "DOGSEYES")
						var VAR_28 ++ 
						var VAR_29 = int 0
				}
				break 
			case 2
				execute SCRIPT_14
				var teddy = call get_char_item_if_equiped(gamevar control_char_p, int 90)
				if(var teddy)
				 {
						call set_input_system(int 2)
						call freeze_enemy(var nmoss)
						call stop_playing_sound(var lul2_sound_ref)
						var DAVID = call get_char_handle(int 65536)
						call func_19(var nmoss, gamevar control_char_p)
						call save_pos_to_room_memory(int 12345, int 1, int 1, int 1)
						var VAR_28 ++ 
						var VAR_29 = int 0
				}
				break 
			case 3
				if(call is_char_standing(var nmoss))
				 {
						call char_turn_to_pos(var nmoss, call get_char_pos(gamevar control_char_p))
						call char_turn_to_pos(gamevar control_char_p, call get_char_pos(var nmoss))
						if(gamevar control_char_p != var DAVID)
						 {
								call char_turn_to_pos(var DAVID, call get_char_pos(var nmoss))
						}
						call start_dialog("S_MOSTED", "NULL")
						var VAR_28 ++ 
						var VAR_29 = int 0
				}
				break 
			case 4
				if(call func_6d() == int 1)
				 {
						call set_char_running(var nmoss)
						call func_2b(var nmoss, int 0)
						call func_60(gamevar control_char_p, var teddy)
						var VAR_28 ++ 
						var VAR_29 = int 0
				}
				break 
			case 5
				if(var VAR_29 > int 60)
				 {
						call char_turn_to_pos(var DAVID, var &position)
						call resume_conversation()
						call remove_item_from_pie(var teddy)
						var VAR_28 ++ 
						var VAR_29 = int 0
				}
				break 
			case 6
				if(call get_input_sys() != int 4)
				 {
						call set_input_system(int 1)
						var VAR_0 = int 1
						var VAR_28 ++ 
						var VAR_29 = int 0
				}
				break 
	}
	var VAR_29 ++ 

._SCRIPT_14
	if(call get_input_sys() == int 4)
	 {
			if(var lul2_sound_ref != int -1)
			 {
					call func_9f(var lul2_sound_ref, int 50)
					var lul2_sound_ref = int -1
			}
	}
	switch(var VAR_38)
	 {
			case 0
				var lul2_sound_ref = call play_loaded_sound(int 1 + var VAR_41, int 0, int 58, int 0)
				var VAR_41 ++ 
				var VAR_38 ++ 
				var VAR_39 = int 0
				break 
			case 1
				if(var VAR_39 > int 1000)
				 {
						var VAR_38 ++ 
						var VAR_39 = int 0
				}
				break 
			case 2
				var VAR_40 = call randomize_int(int 800, int 1001)
				var VAR_38 ++ 
				var VAR_39 = int 0
				break 
			case 3
				if(var VAR_39 > var VAR_40)
				 {
						var VAR_41 ++ 
						var VAR_41 = var VAR_41 % int 3
						var lul2_sound_ref = call play_loaded_sound /* 'lul2' */ (int 1 + var VAR_41, int 0, int 58, int 0)
						var VAR_38 = int 2
						var VAR_39 = int 0
				}
				break 
	}
	var VAR_39 ++ 
