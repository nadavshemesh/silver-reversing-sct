/*
* This file was auto-generated using 'silver-reversing-sct' tool
* to better understand the scripts presented, one is encouraged to
* view the catalogs at: 
* https://github.com/nadavshemesh/silver-reversing-sct/blob/master/docs/index.md
*
* Any further information and support of this project please visit:
* https://github.com/nadavshemesh/silver-reversing-sct 
*/


._DATA
	init_position	{ -401, -1417, -397 }	
	dick	0	
	init_position1	{ -647, -1417, -281 }	
	ai_script	{ 9, dick, 7, 8 }	
	ai_script1	{ 7, 8 }	
	enemy_gen_script	{ 0, 0, 0, -1, 1, 2, 30, 32, -1, 7, 1, 3, 5, 1, 100, 150, 8, 1, 4, 0, 9, 1, 10, 42, 43, -1, -1 }	
	VAR_36	{ 0, 0 }	
	fx_position	{ -1700, 1000, 550 }	
	VAR_40	{ 2650, 1000, -1150 }	
	init_position2	{ -1234, -1417, 717 }	
	init_position3	{ -1196, -1417, 454 }	
	walk_position	{ -652, -1417, -241 }	
	walk_position1	{ -374, -1417, -208 }	

._on_load
	execute SCRIPT_9
	call play_bgm("RainPt1")
	call load_item(int 93 /* cutlass */ )
	call load_item(int 91 /* rapier */ )
	call load_sound_set(int 32)

	 /* play the sound 'trickle' */ 
	call play_loaded_sound(int 1, int -1, int 32, int 0)
	switch(gamevar room_state)
	 {
			case 1
				execute SCRIPT_3
				break 
			case 2
				execute SCRIPT_6
			default 
				break 
	}

._infinite_loop
	execute SCRIPT_11
	switch(gamevar room_state)
	 {
			case 1
				execute SCRIPT_4
				break 
			case 2
				execute SCRIPT_7
				break 
			default 
				break 
	}

._on_exit
	switch(gamevar room_state)
	 {
			case 1
				execute SCRIPT_5
				if(var VAR_2)
				 {
						gamevar room_state ++ 
				}
				break 
			case 2
				execute SCRIPT_8
				if(var VAR_3 >= int 0)
				 {
						gamevar room_state ++ 
				}
				break 
			default 
				break 
	}

._SCRIPT_3
	call load_char("muscles")
	call load_char("finnegan")
	call load_char("longjohn")
	call load_char("dick")
	var pirate_captain = call create_enemy(int 29, int 0, var &init_position, int 295)
	call func_109(var pirate_captain, int 3)
	var dick = call create_enemy(int 31, int 0, var &init_position1, int 115)
	call func_46(var pirate_captain, int 0)
	call func_46(var dick, int 0)
	call func_fe(var pirate_captain)
	call func_fe(var dick)
	call func_f(var pirate_captain, int 131072)
	call func_f(var dick, int 131072)
	if(call is_char_handle_in_level(int 65536 /* DAVID */ ))
	 {
			var DAVID1 = call get_char_handle(int 65536)
	}
	else
	 {
			var DAVID1 = int 0
	}
	if(call is_char_handle_in_level(int 786432 /* SEKUNE */ ))
	 {
			var SEKUNE1 = call get_char_handle(int 786432)
	}
	else
	 {
			var SEKUNE1 = int 0
	}
	if(call is_char_handle_in_level(int 196608 /* VIVIENNE */ ))
	 {
			var VIVIENNE1 = call get_char_handle(int 196608)
	}
	else
	 {
			var VIVIENNE1 = int 0
	}
	var VAR_2 = int 0
	var VAR_0 = int 0
	var VAR_1 = int 5

._SCRIPT_4
	if(call ! is_char_handle_in_level(int 6356992 /* CAPTAIN */ ))
	 {
			var pirate_captain = int 0
	}
	if(call ! is_char_handle_in_level(int 6422528))
	 {
			var dick = int 0
	}
	switch(var VAR_0)
	 {
			case 0
				if(var VAR_1)
				 {
						var VAR_1 -- 
						exit_script 
				}
				else
				 {
						call set_char_init_state(var pirate_captain, int 13)
						call set_char_init_state(var dick, int 13)
						call play_char_ai_script(var pirate_captain, var &ai_script)
						call play_char_ai_script(var dick, var &ai_script1)
						var VAR_0 ++ 
				}
				break 
			case 1
				var VAR_11 = int 0
				if(var DAVID1)
				 {
						var VAR_11 = call is_char_at_pos(var DAVID1, var &init_position, int 400)
				}
				if(var SEKUNE1&&var ! VAR_11)
				 {
						var VAR_11 = call is_char_at_pos(var SEKUNE1, var &init_position, int 400)
				}
				if(var VIVIENNE1&&var ! VAR_11)
				 {
						var VAR_11 = call is_char_at_pos(var VIVIENNE1, var &init_position, int 400)
				}
				if(var VAR_11)
				 {
						if(call ! is_char_handle_in_level(int 6356992 /* CAPTAIN */ ))
						 {
								var pirate_captain = int 0
						}
						if(call ! is_char_handle_in_level(int 6422528))
						 {
								var dick = int 0
						}
						if(var DAVID1)
						 {
								call char_stop(var DAVID1)
						}
						if(var SEKUNE1)
						 {
								call char_stop(var SEKUNE1)
						}
						if(var VIVIENNE1)
						 {
								call char_stop(var VIVIENNE1)
						}
						var selected_hero = call get_selected_hero()
						if(var pirate_captain)
						 {
								call func_17(var selected_hero, var pirate_captain)
						}
						if(var pirate_captain)
						 {
								call func_17(var pirate_captain, var selected_hero)
						}
						if(var dick)
						 {
								call func_17(var dick, var selected_hero)
						}
						if(var pirate_captain)
						 {
								call func_46(var pirate_captain, int 13)
						}
						if(var dick)
						 {
								call func_46(var dick, int 13)
						}
						call start_dialog("S_DVDENT", "NULL")
						var VAR_2 = int 1
						var VAR_1 = int 30
						var VAR_0 ++ 
				}
				else
				 {
						if(call func_d0())
						 {
								var selected_hero = call get_selected_hero()
								if(var pirate_captain)
								 {
										call func_17(var pirate_captain, var selected_hero)
								}
								if(var dick)
								 {
										call func_17(var dick, var selected_hero)
								}
								if(var pirate_captain)
								 {
										call func_46(var pirate_captain, int 13)
								}
								if(var dick)
								 {
										call func_46(var dick, int 13)
								}
								var VAR_2 = int 1
								var VAR_1 = int 0
								var VAR_0 ++ 
						}
				}
				break 
			case 2
				if(var VAR_1 > int 0)
				 {
						var VAR_1 -- 
				}
				if(var VAR_1 == int 0||call get_input_sys() != int 4)
				 {
						if(var dick)
						 {
								call func_55(var dick, int 93)
						}
						var VAR_1 = int -1
				}
				if(call get_input_sys() != int 4)
				 {
						if(var pirate_captain)
						 {
								call func_f(var pirate_captain, int 8)
						}
						if(var dick)
						 {
								call func_f(var dick, int 8)
						}
						if(var pirate_captain)
						 {
								call func_55(var pirate_captain, int 93)
						}
						if(var pirate_captain)
						 {
								call set_char_init_state(var pirate_captain, int 0)
						}
						if(var dick)
						 {
								call set_char_init_state(var dick, int 0)
						}
						call run_enemy_generator(var &enemy_gen_script, int 600)
						var VAR_0 ++ 
				}
				break 
			case 3
				break 
	}

._SCRIPT_5

._SCRIPT_6
	var VAR_3 = int 0
	var VAR_4 = int 0
	if(call func_6f() != int 0)
	 {
			var VAR_3 = int -5537800
			exit_script 
	}
	var standoff_anim = call load_anim("standoff")
	call load_char("longjohn")
	call load_char("muscles")
	call load_char("dick")
	call load_char("finnegan")
	var dick1 = call create_enemy(int 31, int 0, var &init_position2, int 175)
	var finnegan = call create_enemy(int 32, int 0, var &init_position3, int 335)
	call func_46(var dick1, int 0)
	call func_46(var finnegan, int 0)
	call set_input_system(int 2)

._SCRIPT_7
	if(var VAR_4)
	 {
			var VAR_4 -- 
			exit_script 
	}
	switch(var VAR_3)
	 {
			case 0
				var selected_hero = call get_david_char()
				var VAR_9 = call func_7e()
				var VAR_10 = call func_7e()
				call set_char_running(var selected_hero)
				call char_walk_to(var selected_hero, int -427, int -1417, int 382)
				call set_char_running(var VAR_9)
				call char_walk_to(var VAR_9, int -313, int -1417, int 177)
				if(var VAR_10)
				 {
						call set_char_running(var VAR_10)
						call char_walk_to(var VAR_10, int -664, int -1417, int 190)
				}
				var VAR_3 ++ 
				break 
			case 1
				if(call is_char_standing(var selected_hero)&&call is_char_standing(var VAR_9))
				 {
						call func_17(var selected_hero, var dick1)
						call func_17(var dick1, var selected_hero)
						call func_17(var VAR_9, var finnegan)
						call func_17(var finnegan, var VAR_9)
						var VAR_4 = int 30
						var VAR_3 ++ 
				}
				break 
			case 2
				var longjohn = call create_enemy_through_door(int 28, int 0, int 0, int 0)
				var muscles = call create_enemy_through_door(int 30, int 0, int 0, int 0)
				call func_46(var longjohn, int 0)
				call func_46(var muscles, int 0)
				call char_walk_to_pos(var longjohn, var &walk_position)
				call char_walk_to_pos(var muscles, var &walk_position1)
				var VAR_4 = int 60
				var VAR_3 ++ 
				break 
			case 3
				call play_char_anim(var dick1, var standoff_anim, int 0)
				var VAR_4 = int 30
				var VAR_3 ++ 
				break 
			case 4
				call func_17(var VAR_9, var muscles)
				var VAR_4 = int 60
				var VAR_3 ++ 
				break 
			case 5
				call set_char_init_state(var muscles, int 0)
				call set_char_running(var muscles)
				call func_19(var muscles, var selected_hero)
				call set_input_system(int 1)
				var VAR_4 = int 60
				var VAR_3 ++ 
				break 
			case 6
				call set_char_init_state(var longjohn, int 0)
				call set_char_init_state(var dick1, int 0)
				call set_char_init_state(var finnegan, int 0)
				var VAR_3 ++ 
			case 7
				if(call get_num_of_enemies() <= int 2)
				 {
						var VAR_3 ++ 
				}
				break 
			case 8
				if(call ! is_char_handle_in_level(int 6160384))
				 {
						var longjohn = call create_enemy_through_door(int 28, int 0, int 1, int 0)
						call set_char_running(var longjohn)
						call func_19(var longjohn, var selected_hero)
				}
				if(call ! is_char_handle_in_level(int 2490368 /* MUSCLES */ ))
				 {
						var muscles = call create_enemy_through_door(int 30, int 0, int 1, int 0)
						call set_char_running(var muscles)
						call func_19(var muscles, var VAR_9)
				}
				if(call ! is_char_handle_in_level(int 5767168))
				 {
						var finnegan = call create_enemy_through_door(int 32, int 0, int 1, int 0)
						call set_char_running(var finnegan)
						call func_19(var finnegan, var selected_hero)
				}
				if(call ! is_char_handle_in_level(int 6422528))
				 {
						var dick1 = call create_enemy_through_door(int 31, int 0, int 1, int 0)
						call set_char_running(var dick1)
						call func_19(var dick1, var VAR_9)
				}
				var VAR_3 ++ 
				break 
			case 9
				if(call get_num_of_enemies() <= int 2)
				 {
						var VAR_3 ++ 
				}
				break 
			case 10
				if(call ! is_char_handle_in_level(int 6160384))
				 {
						var longjohn = call create_enemy_through_door(int 28, int 0, int 2, int 0)
						call set_char_running(var longjohn)
						call func_19(var longjohn, var selected_hero)
				}
				if(call ! is_char_handle_in_level(int 2490368 /* MUSCLES */ ))
				 {
						var muscles = call create_enemy_through_door(int 30, int 0, int 2, int 0)
						call set_char_running(var muscles)
						call func_19(var muscles, var VAR_9)
				}
				if(call ! is_char_handle_in_level(int 5767168))
				 {
						var finnegan = call create_enemy_through_door(int 32, int 0, int 2, int 0)
						call set_char_running(var finnegan)
						call func_19(var finnegan, var selected_hero)
				}
				if(call ! is_char_handle_in_level(int 6422528))
				 {
						var dick1 = call create_enemy_through_door(int 31, int 0, int 2, int 0)
						call set_char_running(var dick1)
						call func_19(var dick1, var VAR_9)
				}
				var VAR_3 ++ 
				break 
			default 
				break 
	}

._SCRIPT_8

._SCRIPT_9
	call log("it's_raining")
	call play_3d_fx("RAIN", var &fx_position, var &VAR_40, int 0)
	execute SCRIPT_10

._SCRIPT_10
	call load_sound_set(int 25)

	 /* play the sound 'blank' */ 
	call play_loaded_sound(int 1, int -1, int 25, int 0)
	var thunrumb_sound_ref = call play_loaded_sound(int 3, int -1, int 25, int 0)
	var VAR_20 = int 70
	call set_sound_volume(var thunrumb_sound_ref, var VAR_20)
	var VAR_19 = int 1

._SCRIPT_11
	if(var ! VAR_19)
	 {
			call log("random_rain_fx: Rain SFX not initialised! See Marc")
			exit_script 
	}
	switch(var VAR_23)
	 {
			case 0
				if(var VAR_22)
				 {
						var VAR_25 = int 1
						var VAR_23 ++ 
						var VAR_24 = int 0
				}
				break 
			case 1
				if(var VAR_20 < int 200)
				 {
						var VAR_26 = var VAR_24 % int 2
						if(var VAR_26 == int 0)
						 {
								var VAR_20 += var VAR_25
								call set_sound_volume(var thunrumb_sound_ref, var VAR_20)
						}
				}
				else
				 {
						var VAR_23 ++ 
						var VAR_24 = int 0
				}
				break 
			case 2
				if(var VAR_24 > int 150)
				 {
						var VAR_23 ++ 
						var VAR_24 = int 0
				}
				break 
			case 3
				if(var VAR_20 > int 70)
				 {
						var VAR_26 = var VAR_24 % int 2
						if(var VAR_26)
						 {
								var VAR_20 -= var VAR_25
								call set_sound_volume(var thunrumb_sound_ref, var VAR_20)
						}
				}
				else
				 {
						var VAR_22 = int 0
						var VAR_23 = int 0
						var VAR_24 = int 0
				}
				break 
	}
	execute SCRIPT_12
	execute SCRIPT_13
	var VAR_24 ++ 

._SCRIPT_12
	switch(var VAR_28)
	 {
			case 0
				var VAR_29 = int 0
				var VAR_30 = call randomize_int(int 1200, int 1801)
				var VAR_28 ++ 
				break 
			case 1
				if(var VAR_29 > var VAR_30)
				 {
						var thunstrk_sound_ref = call play_loaded_sound(int 4, int 0, int 25, int 0)
						call set_sound_volume(var thunstrk_sound_ref, call randomize_int(int 100, int 201))
						call func_11a(var thunstrk_sound_ref, call randomize_int(int 0, int 128))
						if(var ! VAR_22)
						 {
								var VAR_22 = int 1
						}
						var VAR_28 ++ 
						var VAR_29 = int 0
				}
				break 
			case 2
				if(var VAR_29 > int 200)
				 {
						var VAR_28 = int 0
						var VAR_29 = int 0
				}
				break 
	}
	var VAR_29 ++ 

._SCRIPT_13
	switch(var VAR_32)
	 {
			case 0
				if(gamevar scene_counter > int 600)
				 {
						var VAR_32 ++ 
				}
				break 
			case 1
				var VAR_33 = int 0
				call reset_local_timer()
				var VAR_35 = call randomize_int(int 400, int 601)
				var VAR_32 ++ 
				break 
			case 2
				if(call is_local_timer_greater_than(var VAR_35))
				 {
						call apply_effect_on_char(gamevar misc_fx_scripts, int 6, int 0, int 0)
						call reset_local_timer()
						var VAR_36 = int 255
						var VAR_35 = call randomize_int(int 1, int 31)
						var VAR_33 = int 0
						var VAR_32 ++ 
				}
				break 
			case 3
				if(call is_local_timer_greater_than(var VAR_35))
				 {
						var VAR_36 -= int 4 * var VAR_35
						var verwind_sound_ref = call play_loaded_sound(int 5, int 0, int 25, int 0)
						call set_sound_volume(var verwind_sound_ref, var VAR_36)
						var VAR_35 = int 255 - var VAR_36
						var VAR_33 = int 0
						var VAR_32 ++ 
				}
				break 
			case 4
				if(var VAR_33 > var VAR_35)
				 {
						var verwind_sound_ref = call play_loaded_sound /* 'thunstrk' */ (int 4, int 0, int 25, int 0)
						call set_sound_volume(var verwind_sound_ref, var VAR_36)
						if(var ! VAR_22)
						 {
								var VAR_22 = int 1
						}
						var VAR_32 ++ 
						var VAR_33 = int 0
				}
				break 
			case 5
				if(var VAR_33 > int 100)
				 {
						var VAR_32 = int 1
						var VAR_33 = int 0
				}
				break 
	}
	var VAR_33 ++ 
