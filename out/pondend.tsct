/*
* This file was auto-generated using 'silver-reversing-sct' tool
* to better understand the scripts presented, one is encouraged to
* view the catalogs at: 
* https://github.com/nadavshemesh/silver-reversing-sct/blob/master/docs/index.md
*
* Any further information and support of this project please visit:
* https://github.com/nadavshemesh/silver-reversing-sct 
*/


._DATA
	VAR_4	{ 1463, -50, 413, -1556, -50, 576 }	
	VAR_5	{ 601, -808, 900, 2, -999, 900, -705, -717, 900 }	
	VAR_6	{ 601, 400, 900, 2, 400, 900, -705, 400, 900 }	
	/* 
		Interpretation of: enemy_gen_script

		Generate at 3 positions from: VAR_5
		Order of positions: Random
		Total waves: 3; 3 enemies generated in each wave.
		Trigger wave when there are less than 3 enemies left.
		Delay for first enemy: 50; delay between each enemy: 100
		Enemies:
			bee
			bee
			bee
 	*/
	enemy_gen_script	{ 0, 1, 3, VAR_5, 8, 2, 4, 2, 3, VAR_6, 9, 0, 1, 3, 27, 27, 27, -1, 5, 1, 50, 100, 7, 1, 3, 6, 1, -1 }	
	/* 
		Interpretation of: enemy_gen_script1

		Enter from door: 1
		Total waves: 1; 2 enemies generated in each wave.
		Trigger wave when there are less than 10 enemies left.
		Delay for first enemy: 10; delay between each enemy: 20
		Enemies:
			bee
			bee
 	*/
	enemy_gen_script1	{ 0, 0, 1, -1, 8, 0, 4, 0, 9, 1, 1, 1, 27, 27, -1, 5, 1, 10, 20, 7, 1, 10, -1 }	
	VAR_14	{ 26, -325, 1392 }	
	VAR_15	{ 0, 0 }	
	VAR_24	{ 0, 0 }	
	walk_position	{ -1265, -50, 580 }	
	VAR_30	{ -1463, -50, 652 }	
	VAR_31	{ -1757, -175, 801 }	
	VAR_32	{ -2053, -300, 934 }	
	VAR_33	{ -2414, -450, 1096 }	
	VAR_34	{ -2551, -525, 1108 }	
	VAR_36	{ 0, 0 }

._on_load
	if(call play_bgm("HAVNBPT1"))
	 {
			call func_114(int 1)
			call func_5a(int -1)
	}
	execute SCRIPT_3
	call load_sound_set(int 77)
	call load_sound_set(int 37)

	 /* play the sound 'Fountain' */ 
	call play_loaded_sound(int 1, int -1, int 37, int 0)
	call load_sound_set(int 12)

	 /* play the sound 'sent1' */ 
	call play_loaded_sound(int 8, int -1, int 12, int 0)
	switch(gamevar room_state)
	 {
			case 1
				execute SCRIPT_5
				break 
			case 2
				execute SCRIPT_7
				break 
			case 3
				execute SCRIPT_9
				break 
			case 4
				execute SCRIPT_11
				break 
			case 0
				break 
	}

._infinite_loop
	execute SCRIPT_13
	if(gamevar !is_room_cleared)
	 {
			switch(gamevar room_state)
			 {
					case 1
						execute SCRIPT_4
						break 
					case 2
						execute SCRIPT_6
						break 
					case 3
						execute SCRIPT_8
						break 
					case 4
						execute SCRIPT_10
						break 
					case 0
						break 
			}
	}

._on_exit
	if(gamevar !is_room_cleared)
	 {
			switch(gamevar room_state)
			 {
					case 1
						if(var VAR_1)
						 {
								gamevar room_state ++ 
						}
						break 
					case 2
						break 
					case 3
						gamevar room_state ++ 
						break 
					case 4
						break 
			}
	}

._SCRIPT_3
	if(gamevar *scene_info_p+1)
	 {
			gamevar SMACKER_X = int 184
			gamevar SMACKER_Y = int 216
			call play_2d_anim("newwater", int 1, int 1, int 0)
	}
	else
	 {
			gamevar SMACKER_X = int 176
			gamevar SMACKER_Y = int 216
			call play_2d_anim("pondend", int 1, int 1, int 0)
	}

._SCRIPT_4
	execute SCRIPT_14
	switch(var VAR_10)
	 {
	}
	var VAR_11 ++ 

._SCRIPT_5
	call load_char("gbee")

._SCRIPT_6

._SCRIPT_7

._SCRIPT_8
	switch(var VAR_27)
	 {
			case 0
				var VAR_15 = gamevar control_char_p
				if(var VAR_15)
				 {
						call set_char_running(var VAR_15)
						call char_walk_to_pos(var VAR_15, var &walk_position)
						var VAR_27 ++ 
						var VAR_26 = int 0
				}
				break 
			case 1
				if(call is_char_standing(var VAR_15))
				 {
						var VAR_23 = int 1
						var scroll = call create_item(int 102)
						call remove_item_from_pie(var scroll)
						call func_f8(int 102, int 100)
						var VAR_27 ++ 
						var VAR_26 = int 0
				}
				break 
			case 2
				if(var VAR_24 == int 5)
				 {
						call apply_effect_on_char(gamevar char_gen_fx_scripts, int 11, var &VAR_30, int 0)
						var VAR_27 ++ 
						var VAR_26 = int 0
				}
				break 
			case 3
				if(var VAR_24 == int 10)
				 {
						call apply_effect_on_char(gamevar char_gen_fx_scripts, int 11, var &VAR_31, int 0)
						var VAR_27 ++ 
						var VAR_26 = int 0
				}
				break 
			case 4
				if(var VAR_24 == int 15)
				 {
						call apply_effect_on_char(gamevar char_gen_fx_scripts, int 11, var &VAR_32, int 0)
						var VAR_27 ++ 
						var VAR_26 = int 0
				}
				break 
			case 5
				if(var VAR_24 == int 20)
				 {
						call apply_effect_on_char(gamevar char_gen_fx_scripts, int 11, var &VAR_33, int 0)
						var VAR_27 ++ 
						var VAR_26 = int 0
				}
				break 
			case 6
				if(var VAR_24 == int 25)
				 {
						call apply_effect_on_char(gamevar char_gen_fx_scripts, int 11, var &VAR_34, int 0)
						var VAR_27 ++ 
						var VAR_26 = int 0
				}
				break 
			case 7
				if(var VAR_23 == int -1)
				 {
						call set_input_system(int 1)
						var VAR_27 ++ 
						var VAR_26 = int 0
				}
				break 
	}

._SCRIPT_9
	gamevar SMACKER_X = int 392
	gamevar SMACKER_Y = int 312
	var VAR_22 = call play_2d_anim("newfade", int 0, int 1, var &VAR_23)
	call set_input_system(int 2)

._SCRIPT_10

._SCRIPT_11

._SCRIPT_12

._SCRIPT_13
	if(gamevar script_time > var VAR_36)
	 {
			var VAR_36 = gamevar script_time + int 80 + call randomize_int(int 0, int 60)
			var VAR_35 = int 2 + call randomize_int(int 0, int 6)
			call play_loaded_sound(var VAR_35, int 0, int 12, int 0)
	}

._SCRIPT_14
	switch(var VAR_18)
	 {
			case 0
				if(call get_num_of_enemies() > int 0)
				 {
						call log_string("start multi_bees")
						var oracle1_sound_ref = call play_loaded_sound(int 1, int -1, int 77, int 0)
						call func_7f(var oracle1_sound_ref, int 100)
						var VAR_18 ++ 
						var VAR_19 = int 0
				}
				break 
			case 1
				if(call get_num_of_enemies() == int 0)
				 {
						call func_9f(var oracle1_sound_ref, int 100)
						var VAR_18 = int 0
						var VAR_19 = int 0
				}
				break 
	}
	var VAR_19 ++ 
