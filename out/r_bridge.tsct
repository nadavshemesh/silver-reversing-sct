/*
* This file was auto-generated using 'silver-reversing-sct' tool
* to better understand the scripts presented, one is encouraged to
* view the catalogs at: 
* https://github.com/nadavshemesh/silver-reversing-sct/blob/master/docs/index.md
*
* Any further information and support of this project please visit:
* https://github.com/nadavshemesh/silver-reversing-sct 
*/


._DATA
	VAR_17	{ 0, 0 }	
	fx_position	{ -3359, 2978, -346 }	
	VAR_20	{ 3332, 2978, 5043 }	
	ogre	{ 0, 0, 0 }	
	init_position	{ -890, 297, -2412, -370, 297, -2535, -408, 297, -2269 }	
	init_position1	{ 1958, 297, -633 }	
	init_position2	{ 1749, 297, -4030 }	
	/* 
		Interpretation of: enemy_gen_script

		Enter from door: 0
		Total waves: 1; 3 enemies generated in each wave.
		Trigger wave when there are less than 3 enemies left.
		Delay for first enemy: 100; delay between each enemy: 0
		Enemies:
			ronnie2
			ronnie
			ronnie
		Item drops:
			veggies
 	*/
	enemy_gen_script	{ 0, 0, 0, -1, 8, 0, 1, 1, 80, 77, 77, -1, 4, 0, 9, 0, 5, 0, 100, 6, 3, 7, 1, 3, 10, 41, -1, -1 }	
	/* 
		Interpretation of: enemy_gen_script1

		Enter from door: 0
		Total waves: 1; 4 enemies generated in each wave.
		Trigger wave when there are less than 2 enemies left.
		Delay for first enemy: 60; delay between each enemy: 0
		Enemies:
			orc2
			orc2
			orc2
			orc2
		Item drops:
			cheese
			bread
 	*/
	enemy_gen_script1	{ 0, 0, 0, -1, 8, 0, 1, 1, 81, 81, 81, 81, -1, 4, 0, 9, 0, 5, 0, 60, 6, 3, 7, 1, 2, 10, 43, 42, -1, -1, 0, -370, 297, -2535, 0, -414, 298, -3857, 7, 8, 0, -408, 297, -2269, 0, -499, 298, -1103, 5, 29, 7, 8 }	

._on_load
	execute SCRIPT_3
	call stop_bgm(int 1)
	if(gamevar is_room_cleared)
	 {
			execute SCRIPT_8
	}
	else
	 {
			switch(gamevar room_state)
			 {
					case 1
						execute SCRIPT_5
						break 
					case 2
						execute SCRIPT_7
						break 
					case 0
						break 
			}
	}

._infinite_loop
	execute SCRIPT_10
	if(gamevar !is_room_cleared)
	 {
			switch(gamevar room_state)
			 {
					case 1
						execute SCRIPT_4
						break 
					case 2
						execute SCRIPT_6
						break 
					case 0
						break 
			}
	}

._on_exit
	if(gamevar !is_room_cleared)
	 {
			switch(gamevar room_state)
			 {
					case 1
						gamevar room_state ++ 
						gamevar is_room_cleared = int 1
						break 
					case 2
						gamevar room_state ++ 
						gamevar is_room_cleared = int 1
						break 
					case 0
						break 
					default 
						gamevar room_state = int 0
						break 
			}
	}

._SCRIPT_3
	call log_string("it's_raining")
	call play_3d_fx("RAIN", var &fx_position, var &VAR_20, int 0)
	execute SCRIPT_9

._SCRIPT_4
	if(var VAR_33 == int 0)
	 {
			var VAR_34 ++ 
			if(var VAR_34 > int 80)
			 {
					if(call func_88(var ogre))
					 {
							var VAR_28 = call run_enemy_generator(var &enemy_gen_script, int 10)
							var VAR_33 ++ 
					}
			}
	}
	if(var VAR_33 == int 1)
	 {
			if(call func_122(var VAR_28) == int 0)
			 {
					var VAR_28 = call run_enemy_generator(var &enemy_gen_script1, int 10)
					var VAR_33 ++ 
			}
	}

._SCRIPT_5
	var ogre = call create_enemy(int 76, int 0, var &init_position, int 60)
	call add_item_to_char(var ogre, int 85 /* moneybag */ , int 3277313, int 0)
	gamevar script_object = var ogre
	gamevar *character_stats_p+15 = int 3400
	var orc2 = call create_enemy(int 81, int 3, var &init_position1, int 245)
	gamevar script_object = var orc2
	gamevar *character_stats_p+16 = int 1400
	gamevar *character_stats_p+15 = int 3400
	var orc = call create_enemy(int 78, int 4, var &init_position2, int 53)
	call add_item_to_char(var orc, int 85 /* moneybag */ , int 1638913, int 0)
	gamevar script_object = var orc
	gamevar *character_stats_p+16 = int 1400
	gamevar *character_stats_p+15 = int 3400
	call func_106(var ogre, int 1, int 0, int 1)
	call func_106(var orc2, int 1, int 0, int 1)
	call func_106(var orc, int 1, int 0, int 1)
	call func_50(var ogre, int 131)
	call func_50(var ogre, int 130)
	call func_104(var ogre, int 1, int 4)
	call func_106(var ogre, int 1, int 7, int 1)
	call func_104(var ogre, int 7, int 4)
	call load_char("orc")
	call load_char("ronnie")
	call load_item(int 92 /* spikmace */ )

._SCRIPT_6

._SCRIPT_7

._SCRIPT_8

._SCRIPT_9
	call load_sound_set(int 25)

	 /* play the sound 'blank' */ 
	call play_loaded_sound(int 1, int -1, int 25, int 0)
	var thunrumb_sound_ref = call play_loaded_sound(int 3, int -1, int 25, int 0)
	var VAR_1 = int 70
	call set_sound_volume(var thunrumb_sound_ref, var VAR_1)
	var VAR_0 = int 1

._SCRIPT_10
	if(var ! VAR_0)
	 {
			call log_string("random_rain_fx: Rain SFX not initialised! See Marc")
			exit_script 
	}
	switch(var VAR_4)
	 {
			case 0
				if(var VAR_3)
				 {
						var VAR_6 = int 1
						var VAR_4 ++ 
						var VAR_5 = int 0
				}
				break 
			case 1
				if(var VAR_1 < int 200)
				 {
						var VAR_7 = var VAR_5 % int 2
						if(var VAR_7 == int 0)
						 {
								var VAR_1 += var VAR_6
								call set_sound_volume(var thunrumb_sound_ref, var VAR_1)
						}
				}
				else
				 {
						var VAR_4 ++ 
						var VAR_5 = int 0
				}
				break 
			case 2
				if(var VAR_5 > int 150)
				 {
						var VAR_4 ++ 
						var VAR_5 = int 0
				}
				break 
			case 3
				if(var VAR_1 > int 70)
				 {
						var VAR_7 = var VAR_5 % int 2
						if(var VAR_7)
						 {
								var VAR_1 -= var VAR_6
								call set_sound_volume(var thunrumb_sound_ref, var VAR_1)
						}
				}
				else
				 {
						var VAR_3 = int 0
						var VAR_4 = int 0
						var VAR_5 = int 0
				}
				break 
	}
	execute SCRIPT_11
	execute SCRIPT_12
	var VAR_5 ++ 

._SCRIPT_11
	switch(var VAR_9)
	 {
			case 0
				var VAR_10 = int 0
				var VAR_11 = call randomize_int(int 1200, int 1801)
				var VAR_9 ++ 
				break 
			case 1
				if(var VAR_10 > var VAR_11)
				 {
						var thunstrk_sound_ref = call play_loaded_sound(int 4, int 0, int 25, int 0)
						call set_sound_volume(var thunstrk_sound_ref, call randomize_int(int 100, int 201))
						call func_11a(var thunstrk_sound_ref, call randomize_int(int 0, int 128))
						if(var ! VAR_3)
						 {
								var VAR_3 = int 1
						}
						var VAR_9 ++ 
						var VAR_10 = int 0
				}
				break 
			case 2
				if(var VAR_10 > int 200)
				 {
						var VAR_9 = int 0
						var VAR_10 = int 0
				}
				break 
	}
	var VAR_10 ++ 

._SCRIPT_12
	switch(var VAR_13)
	 {
			case 0
				if(gamevar scene_counter > int 600)
				 {
						var VAR_13 ++ 
				}
				break 
			case 1
				var VAR_14 = int 0
				call reset_local_timer()
				var VAR_16 = call randomize_int(int 400, int 601)
				var VAR_13 ++ 
				break 
			case 2
				if(call is_local_timer_greater_than(var VAR_16))
				 {
						call apply_effect_on_char(gamevar misc_fx_scripts, int 6, int 0, int 0)
						call reset_local_timer()
						var VAR_17 = int 255
						var VAR_16 = call randomize_int(int 1, int 31)
						var VAR_14 = int 0
						var VAR_13 ++ 
				}
				break 
			case 3
				if(call is_local_timer_greater_than(var VAR_16))
				 {
						var VAR_17 -= int 4 * var VAR_16
						var verwind_sound_ref = call play_loaded_sound(int 5, int 0, int 25, int 0)
						call set_sound_volume(var verwind_sound_ref, var VAR_17)
						var VAR_16 = int 255 - var VAR_17
						var VAR_14 = int 0
						var VAR_13 ++ 
				}
				break 
			case 4
				if(var VAR_14 > var VAR_16)
				 {
						var verwind_sound_ref = call play_loaded_sound /* 'thunstrk' */ (int 4, int 0, int 25, int 0)
						call set_sound_volume(var verwind_sound_ref, var VAR_17)
						if(var ! VAR_3)
						 {
								var VAR_3 = int 1
						}
						var VAR_13 ++ 
						var VAR_14 = int 0
				}
				break 
			case 5
				if(var VAR_14 > int 100)
				 {
						var VAR_13 = int 1
						var VAR_14 = int 0
				}
				break 
	}
	var VAR_14 ++ 
