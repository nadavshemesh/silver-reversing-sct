/*
* This file was auto-generated using 'silver-reversing-sct' tool
* to better understand the scripts presented, one is encouraged to
* view the catalogs at: 
* https://github.com/nadavshemesh/silver-reversing-sct/blob/master/docs/index.md
*
* Any further information and support of this project please visit:
* https://github.com/nadavshemesh/silver-reversing-sct 
*/


._DATA
	VAR_1	{ 0, 0 }	
	VAR_4	{ 100, 12 }	
	VAR_7	{ 0, 0, 1, -1, 8, 0, 1, 3, 165, 165, 165, -1, 4, 0, 9, 0, 5, 0, 140, 6, 3, 7, 1, 4, -1 }	
	VAR_8	{ 589, -1100, -3448, -15, -630, -4404, 557, -1100, -5318, -506, -1100, -5323, -913, -1100, -4394, -514, -1100, -3493 }	
	init_position	{ 16, -1100, -5300 }	
	VAR_16	{ 1110704128, -997621760, -987217920 }	
	VAR_17	{ 1145667584, -997621760, -981190656 }	
	VAR_18	{ 1110441984, -997621760, -977018880 }	
	arr	{ VAR_16, VAR_17, VAR_18 }

._on_load
	call load_sound_set(int 46)

	 /* play the sound 'palamb1' */ 
	call play_loaded_sound(int 4, int -1, int 46, int 0)
	if(gamevar is_room_cleared)
	 {
			execute SCRIPT_9
	}
	else
	 {
			switch(gamevar room_state)
			 {
					case 1
						execute SCRIPT_6
						break 
					case 2
						execute SCRIPT_8
						break 
					case 0
						break 
			}
	}
	execute SCRIPT_3
	var VAR_0 = int 1
	call load_sound_set(int 50)

	 /* play the sound 'gyro2' */ 
	call play_loaded_sound(int 1, int -1, int 50, int 0)

	 /* play the sound 'gyro3' */ 
	call play_loaded_sound(int 2, int -1, int 50, int 0)

	 /* play the sound 'Lever2' */ 
	call play_loaded_sound(int 3, int -1, int 50, int 0)

._infinite_loop
	execute SCRIPT_4
	if(gamevar !is_room_cleared)
	 {
			switch(gamevar room_state)
			 {
					case 1
						execute SCRIPT_5
						break 
					case 2
						execute SCRIPT_7
						break 
					case 0
						break 
			}
	}
	var VAR_3 = var VAR_1 - int 1
	if(var VAR_3 != var VAR_4&&var VAR_3 > int 0)
	 {
			var VAR_4 = var VAR_3
			call func_4e(var VAR_3 / int 2)
	}

._on_exit
	if(gamevar !is_room_cleared)
	 {
			switch(gamevar room_state)
			 {
					case 1
						gamevar room_state ++ 
						gamevar is_room_cleared = int 1
						break 
					case 2
						gamevar room_state ++ 
						gamevar is_room_cleared = int 1
						break 
					case 0
						break 
					default 
						gamevar room_state = int 0
						break 
			}
	}

._SCRIPT_3
	gamevar SMACKER_X = int 76
	gamevar SMACKER_Y = int 0
	call play_2d_anim("s_circle", int 1, int 0, var &VAR_0)

._SCRIPT_4
	if(gamevar script_time > var VAR_13)
	 {
			var VAR_13 = gamevar script_time + int 70 + call randomize_int(int 0, int 110)
			var index = call randomize_int(int 0, int 3)

			 /* play the sound 'flayamb1' */ 
			call play_loaded_sound(int 5, int 0, int 46, @arr[var VAR_15])
	}
	if(gamevar script_time > var VAR_14)
	 {
			var VAR_14 = gamevar script_time + int 100 + call randomize_int(int 0, int 200)
			var index = call randomize_int(int 0, int 3)

			 /* play the sound 'torches2' */ 
			call play_loaded_sound(int 6, int 0, int 46, @arr[var index])
	}

._SCRIPT_5
	if(var VAR_11 == int 0)
	 {
			var VAR_12 ++ 
			if(var VAR_12 > int 240)
			 {
					if(call is_char_handle_in_level(int 12386304))
					 {
							call func_106(var flayer, int 3, int 1, var &VAR_7)
					}
					var VAR_11 ++ 
			}
	}

._SCRIPT_6
	call load_char("flayer")
	call load_char("iwarrior")
	var flayer = call create_enemy(int 162, int 0, var &init_position, int 309)
	call func_106(var flayer, int 2, int 1, var &VAR_8)
	call func_106(var flayer, int 2, int 3, int 6)
	call func_50(var flayer, int 8)
	call add_item_to_char(var flayer, int 32 /* potwhite */ , int 1, int 0)
	call add_item_to_char(var flayer, int 83 /* borb */ , int 1, int 1)
	call add_item_to_char(var flayer, int 32 /* potwhite */ , int 1, int 0)
	call add_item_to_char(var flayer, int 83 /* borb */ , int 1, int 1)

._SCRIPT_7

._SCRIPT_8

._SCRIPT_9
