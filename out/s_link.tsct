/*
* This file was auto-generated using 'silver-reversing-sct' tool
* to better understand the scripts presented, one is encouraged to
* view the catalogs at: 
* https://github.com/nadavshemesh/silver-reversing-sct/blob/master/docs/index.md
*
* Any further information and support of this project please visit:
* https://github.com/nadavshemesh/silver-reversing-sct 
*/


._DATA
	VAR_18	""	
	VAR_23	-1	
	init_position3	{ -47, -1100, -4392 }	
	VAR_42	{ 0, 0 }	
	VAR_44	{ 0, 0 }	
	VAR_46	{ 0, 0 }	
	init_position	{ 865, -1100, -4376 }	
	init_position2	{ 331, -1100, -5217 }	
	init_position1	{ 274, -1100, -3474 }	
	VAR_63	{ 637, -1100, -3496, -493, -1100, -5377, -1038, -1100, -4029, -412, -1100, -3351, 777, -1100, -5162, -158, -1100, -3327 }	
	VAR_64	{ 237, -1100, -3404, 637, -1100, -3627, 931, -1100, -3934, 993, -1100, -4363, 873, -1100, -4911, 516, -1100, -5252, 32, -1100, -5418 }	
	VAR_65	{ -404, -1100, -5309, -639, -1100, -5134, -811, -1100, -4816, -884, -1100, -4448, -907, -1100, -3980, -527, -1100, -3607, -348, -1100, -3366 }	
	VAR_66	{ 443, -1100, -4139, 63, -1100, -3877, -395, -1100, -4119, -431, -1100, -4630, 6, -1100, -4884, 470, -1100, -4619, 733, -1100, -3968, -1, -1100, -3550, -711, -1100, -3958, -713, -1100, -4814, 31, -1100, -5219, 736, -1100, -4784, 396, -1100, -5118, 474, -1100, -3727, -363, -1100, -3730, -353, -1100, -5076, -776, -1100, -4366 }	
	VAR_67	{ 764, -1100, -3949, 32, -1100, -3518, -707, -1100, -3844, 742, -1100, -4805, 27, -1100, -5242, -500, -1100, -4964 }	
	VAR_68	{ 0, 1, 17, VAR_66, 8, 2, 4, 0, 9, 2, 1, 10, 165, -1, 5, 1, 40, 100, 7, 1, 2, 6, 2, -1 }	
	/* 
		Interpretation of: enemy_gen_script

		Generate at 6 positions from: VAR_67
		Order of positions: Random
		Total waves: 3; 1 enemies generated in each wave.
		Trigger wave when there are less than 4 enemies left.
		Delay for first enemy: 60; delay between each enemy: 0
		Enemies:
			iwarrior_med
 	*/
	enemy_gen_script	{ 0, 1, 6, VAR_67, 8, 2, 4, 0, 9, 2, 1, 3, 164, -1, 5, 0, 60, 7, 1, 4, 6, 1, -1 }	
	VAR_72	{ 0, 0 }	
	VAR_76	{ 0, 0 }	
	VAR_80	10	
	VAR_81	{ -177, -1100, -3355, -355, -1100, -5407 }	
	VAR_90	{ -1030750208, -997621760, -984530944 }	
	VAR_91	{ -1038614528, -997621760, -978655232 }	
	VAR_92	{ -996499456, -997621760, -980764672 }	
	arr	{ VAR_90, VAR_91, VAR_92 }

._on_load
	execute SCRIPT_10
	call load_sound_set(int 46)

	 /* play the sound 'palamb1' */ 
	call play_loaded_sound(int 4, int -1, int 46, int 0)
	if(gamevar is_room_cleared)
	 {
			execute SCRIPT_9
	}
	else
	 {
			switch(gamevar room_state)
			 {
					case 1
						execute SCRIPT_6
						break 
					case 2
						execute SCRIPT_8
						break 
					case 0
						break 
			}
	}
	call load_sound_set(int 57)

._infinite_loop
	execute SCRIPT_4
	var VAR_0 = int 2
	execute SCRIPT_11
	if(gamevar !is_room_cleared)
	 {
			switch(gamevar room_state)
			 {
					case 1
						execute SCRIPT_5
						break 
					case 2
						execute SCRIPT_7
						break 
					case 0
						break 
			}
	}

._on_exit
	execute SCRIPT_12
	if(gamevar !is_room_cleared)
	 {
			switch(gamevar room_state)
			 {
					case 1
						if(var VAR_40)
						 {
								gamevar room_state ++ 
								gamevar is_room_cleared = int 1
						}
						break 
					case 2
						gamevar room_state ++ 
						gamevar is_room_cleared = int 1
						break 
					case 0
						break 
					default 
						gamevar room_state = int 0
						break 
			}
	}

._SCRIPT_3
	gamevar SMACKER_X = int 264
	gamevar SMACKER_Y = int 72
	call play_2d_anim("linkloop", int -2147483, int 0, var &VAR_41)
	gamevar SMACKER_X = int 264
	gamevar SMACKER_Y = int 72
	call play_2d_anim("headdown", int -2147483, int 1, var &VAR_45)
	gamevar SMACKER_X = int 264
	gamevar SMACKER_Y = int 72
	call play_2d_anim("headup", int -2147483, int 1, var &VAR_43)

._SCRIPT_4
	if(gamevar script_time > var VAR_87)
	 {
			var VAR_87 = gamevar script_time + int 70 + call randomize_int(int 0, int 110)
			var index = call randomize_int(int 0, int 3)

			 /* play the sound 'flayamb1' */ 
			call play_loaded_sound(int 5, int 0, int 46, @arr[var VAR_89])
	}
	if(gamevar script_time > var VAR_88)
	 {
			var VAR_88 = gamevar script_time + int 100 + call randomize_int(int 0, int 200)
			var index = call randomize_int(int 0, int 3)

			 /* play the sound 'torches2' */ 
			call play_loaded_sound(int 6, int 0, int 46, @arr[var index])
	}

._SCRIPT_5
	var VAR_75 = var VAR_42
	var VAR_73 = var VAR_44
	var VAR_74 = var VAR_46
	if(var VAR_78)
	 {
			if(var VAR_80 < int 180)
			 {
					var VAR_80 ++ 
					call set_sound_volume(var lul1_sound_ref, var VAR_80)
			}
			else
			 {
					var VAR_78 = int 0
			}
	}
	if(var VAR_79)
	 {
			if(var VAR_80)
			 {
					var VAR_80 -- 
					call set_sound_volume(var lul1_sound_ref, var VAR_80)
			}
			else
			 {
					var VAR_79 = int 0
			}
	}
	switch(var VAR_71)
	 {
			case 0
				if(var VAR_73 > int 1)
				 {
						var VAR_43 = int 0
						var VAR_71 ++ 
				}
				break 
			case 1
				if(call func_8a(var &VAR_81))
				 {
						var VAR_43 = int 1
						var VAR_78 = int 1
						var lul1_sound_ref = call play_loaded_sound(int 1, int -1, int 57, int 0)
						var VAR_71 ++ 
						var VAR_40 = int 1
						gamevar *scene_info_p+1 = int 1
						call func_116("palace", "s_throne", int 3)
						call set_scene_overwrite_act("palace", "s_throne", int 0)
				}
				break 
			case 2
				if(var VAR_73 == int 39)
				 {
						var VAR_76 = call run_enemy_generator(var &enemy_gen_script, int 0)
						var flayer = call create_enemy(int 162, int 0, var &init_position, int 265)
						call add_item_to_char(var flayer, int 38 /* potbrown */ , int 1, int 0)
						call add_item_to_char(var flayer, int 32 /* potwhite */ , int 1, int 0)
						call add_item_to_char(var flayer, int 83 /* borb */ , int 1, int 1)
						call add_item_to_char(var flayer, int 83 /* borb */ , int 1, int 1)
						var VAR_71 ++ 
						var VAR_72 = int 0
						var VAR_43 = int 0
						var VAR_41 = int 1
						call func_106(var flayer, int 2, int 1, var &VAR_63)
						call func_106(var flayer, int 2, int 3, int 6)
				}
				break 
			case 3
				if(call func_122(var VAR_76) == int 0)
				 {
						var VAR_71 ++ 
						if(call is_char_handle_in_level(int 12386304))
						 {
								call func_50(var flayer, int 8)
								call func_106(var flayer, int 3, int 1, var &VAR_68)
						}
				}
				break 
			case 4
				if(call ! is_char_handle_in_level(int 12386304))
				 {
						if(call get_num_of_enemies() == int 0)
						 {
								var VAR_71 ++ 
								var acid_flayer = call create_enemy(int 171, int 0, var &init_position1, int 170)
								var earth_flayer = call create_enemy(int 170, int 0, var &init_position2, int 10)
								call func_106(var acid_flayer, int 2, int 1, var &VAR_65)
								call func_106(var acid_flayer, int 2, int 3, int 7)
								call func_106(var earth_flayer, int 2, int 1, var &VAR_64)
								call func_106(var earth_flayer, int 2, int 3, int 7)
						}
				}
				break 
			case 5
				if(call get_num_of_enemies() == int 0)
				 {
						if(var VAR_75 == int 39)
						 {
								var VAR_41 = int 0
								var VAR_45 = int 1
								var VAR_79 = int 1
								var VAR_82 = int 1
								var VAR_71 ++ 
						}
				}
				break 
			case 6
				if(call get_num_of_enemies() == int 0)
				 {
						if(var VAR_82 == int 1)
						 {
								var fade_chronicler = call create_enemy(int 178, int 0, var &init_position3, int 235)
								var VAR_71 ++ 
						}
				}
				break 
	}
	var VAR_72 ++ 

._SCRIPT_6
	execute SCRIPT_3
	var stepc_anim = call load_anim("stepc")
	call load_char("flayer")
	call load_char("aflayer")
	call load_char("eflayer")
	call load_char("iflayer")
	call load_char("iwarrior")
	call load_char("chronicl")
	var VAR_43 = int 1

._SCRIPT_7

._SCRIPT_8

._SCRIPT_9

._SCRIPT_10
	if(call ! is_char_handle_in_level(int 6291456 /* CHRONICL */ ))
	 {
			exit_script 
	}
	else
	 {
			if(var fade_chronicler == int 0)
			 {
					var fade_chronicler = call get_char_handle(int 6291456)
			}
	}

._SCRIPT_11
	if(call ! is_char_handle_in_level(int 6291456 /* CHRONICL */ ))
	 {
			exit_script 
	}
	else
	 {
			if(var fade_chronicler == int 0)
			 {
					var fade_chronicler = call get_char_handle(int 6291456)
			}
	}
	if(var VAR_23 != var VAR_17)
	 {
			var VAR_23 = var VAR_17
			call log_var(var VAR_17)
	}
	switch(var VAR_17)
	 {
			case 0
				if(gamevar chronicler_variation != int -1)
				 {
						execute SCRIPT_13
				}
				gamevar script_object = var fade_chronicler
				var VAR_20 = gamevar *character_movement_p+3
				var VAR_21 = gamevar *character_movement_p+4
				var VAR_22 = gamevar *character_movement_p+5
				var VAR_3 = int 0
				call func_10c(var fade_chronicler, int 0)
				var VAR_17 ++ 
				var VAR_18 = int 0
				break 
			case 1
				if(call func_127(var fade_chronicler))
				 {
						var VAR_19 = gamevar saved_games_count
						var VAR_3 = int 1
						var VAR_17 ++ 
						var VAR_18 = int 0
				}
				break 
			case 2
				if(call get_input_sys() != int 4)
				 {
						call set_input_system(int 2)
						var VAR_17 ++ 
						var VAR_18 = int 0
				}
				break 
			case 3
				if(var VAR_18 > int 40)
				 {
						call open_save_screen(var VAR_0)
						var VAR_17 ++ 
						var VAR_18 = int 0
				}
				break 
			case 4
				if(var VAR_18 > int 10)
				 {
						if(gamevar !current_menu_level_p)
						 {
								var VAR_17 ++ 
								var VAR_18 = int 0
						}
				}
				break 
			case 5
				if(var VAR_19 != gamevar saved_games_count)
				 {
						call log_string("game saved")
						call func_11d()
						var VAR_17 = int 7
						var VAR_18 = int 0
				}
				else
				 {
						call log_string("game not saved")
						call func_2a(var fade_chronicler, var &VAR_20)
						execute SCRIPT_14
						gamevar chronicler_variation = var VAR_2
						var VAR_17 ++ 
						var VAR_18 = int 0
				}
				break 
			case 6
				if(var VAR_18 > int 30)
				 {
						call set_input_system(int 1)
						gamevar clicked_character = int 0
						var VAR_3 = int 0
						var VAR_17 = int 1
						var VAR_18 = int 0
				}
				break 
			case 7
				if(var VAR_18 > int 40)
				 {
						call apply_effect_on_char(gamevar char_gen_fx_scripts, int 8, int 0, var fade_chronicler)
						execute SCRIPT_14
						gamevar chronicler_variation = var VAR_2
						var VAR_17 ++ 
						var VAR_18 = int 0
				}
				break 
			case 8
				if(var VAR_18 > int 100)
				 {
						call remove_char(var fade_chronicler)
						call set_input_system(int 1)
						var VAR_3 = int 0
						var VAR_17 ++ 
						var VAR_18 = int 0
				}
				break 
	}
	var VAR_18 ++ 

._SCRIPT_12
	if(call is_char_handle_in_level(int 6291456 /* CHRONICL */ ))
	 {
			if(var fade_chronicler == int 0)
			 {
					var fade_chronicler = call get_char_handle(int 6291456)
			}
			call func_34(var fade_chronicler)
	}

._SCRIPT_13
	var VAR_4 = call get_char_handle_id(gamevar control_char_p)
	switch(var VAR_4)
	 {
			case 65536
				call load_dialog_by_number("DVDCHR", "NULL", gamevar chronicler_variation)
				break 
			case 786432
				call load_dialog_by_number("SEKCHR", "NULL", gamevar chronicler_variation)
				break 
			case 262144
				call load_dialog_by_number("CAGCHR", "NULL", gamevar chronicler_variation)
				break 
			case 327680
				call load_dialog_by_number("JUGCHR", "NULL", gamevar chronicler_variation)
				break 
			case 131072
				call load_dialog_by_number("CHICHR", "NULL", gamevar chronicler_variation)
				break 
			case 196608
				call load_dialog_by_number("VIVCHR", "NULL", gamevar chronicler_variation)
				break 
	}

._SCRIPT_14
	var VAR_26 = call get_char_handle_id(gamevar control_char_p)
	switch(var VAR_26)
	 {
			case 65536
				var VAR_2 = call load_next_dialog("DVDCHR", "NULL")
				break 
			case 786432
				var VAR_2 = call load_next_dialog("SEKCHR", "NULL")
				break 
			case 262144
				var VAR_2 = call load_next_dialog("CAGCHR", "NULL")
				break 
			case 327680
				var VAR_2 = call load_next_dialog("JUGCHR", "NULL")
				break 
			case 131072
				var VAR_2 = call load_next_dialog("CHICHR", "NULL")
				break 
			case 196608
				var VAR_2 = call load_next_dialog("VIVCHR", "NULL")
				break 
	}
