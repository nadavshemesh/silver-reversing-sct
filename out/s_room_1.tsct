/*
* This file was auto-generated using 'silver-reversing-sct' tool
* to better understand the scripts presented, one is encouraged to
* view the catalogs at: 
* https://github.com/nadavshemesh/silver-reversing-sct/blob/master/docs/index.md
*
* Any further information and support of this project please visit:
* https://github.com/nadavshemesh/silver-reversing-sct 
*/


._DATA
	init_position	{ -17, 0, -2389 }	
	VAR_7	{ -835, 0, -1961, -268, 0, -2377, 329, 0, -2391, 943, 0, -1955, 1153, 0, -1445, -1141, 0, -1163, -994, 0, -472, 781, 0, -302 }	
	VAR_8	{ -544, -250, -1507, 71, -250, -1805, 687, -250, -1385, 1118, 0, -743, -1240, 0, -1249, 673, 0, -2111 }	
	VAR_9	{ -544, -250, -1507, 71, -250, -1805, 687, -250, -1385 }	
	VAR_10	{ 0, 1, 6, VAR_8, 8, 2, 4, 0, 9, 2, 1, 1, 163, 164, -1, 5, 1, 10, 60, 7, 1, 2, 6, 1, -1 }	
	/* 
		Interpretation of: enemy_gen_script

		Generate at 3 positions from: VAR_9
		Order of positions: Random
		Total waves: 1; 2 enemies generated in each wave.
		Trigger wave when there are less than 2 enemies left.
		Delay for first enemy: 0; delay between each enemy: 0
		Enemies:
			iwarrior_low
			iwarrior_low
 	*/
	enemy_gen_script	{ 0, 1, 3, VAR_9, 8, 2, 4, 0, 9, 2, 1, 1, 163, 163, -1, 5, 0, 0, 7, 1, 2, 6, 1, -1 }	
	VAR_18	{ 1107820544, 0, 1133969408 }	
	VAR_19	{ -1013743616, 0, -988631040 }	
	VAR_20	{ 1149952000, 0, -997457920 }	
	arr	{ VAR_18, VAR_19, VAR_20 }

._on_load
	execute SCRIPT_3
	call load_sound_set(int 46)

	 /* play the sound 'palhum' */ 
	call play_loaded_sound(int 7, int -1, int 46, int 0)

	 /* play the sound 'palamb1' */ 
	call play_loaded_sound(int 4, int -1, int 46, int 0)
	if(gamevar is_room_cleared)
	 {
			execute SCRIPT_9
	}
	else
	 {
			switch(gamevar room_state)
			 {
					case 1
						execute SCRIPT_6
						break 
					case 2
						execute SCRIPT_8
						break 
					case 0
						break 
			}
	}

._infinite_loop
	execute SCRIPT_4
	if(gamevar !is_room_cleared)
	 {
			switch(gamevar room_state)
			 {
					case 1
						execute SCRIPT_5
						break 
					case 2
						execute SCRIPT_7
						break 
					case 0
						break 
			}
	}

._on_exit
	if(gamevar !is_room_cleared)
	 {
			switch(gamevar room_state)
			 {
					case 1
						gamevar room_state ++ 
						gamevar is_room_cleared = int 1
						break 
					case 2
						gamevar room_state ++ 
						gamevar is_room_cleared = int 1
						break 
					case 0
						break 
					default 
						gamevar room_state = int 0
						break 
			}
	}

._SCRIPT_3
	gamevar SMACKER_X = int 220
	gamevar SMACKER_Y = int 176
	call play_2d_anim("s_room_1d", int 1, int 1, int 0)
	gamevar SMACKER_X = int 316
	gamevar SMACKER_Y = int 344
	call play_2d_anim("s_room_1e", int 1, int 1, int 0)
	gamevar SMACKER_X = int 480
	gamevar SMACKER_Y = int 176
	call play_2d_anim("s_room_1f", int 1, int 1, int 0)

._SCRIPT_4
	if(gamevar script_time > var VAR_15)
	 {
			var VAR_15 = gamevar script_time + int 70 + call randomize_int(int 0, int 110)
			var index = call randomize_int(int 0, int 3)

			 /* play the sound 'flayamb1' */ 
			call play_loaded_sound(int 5, int 0, int 46, @arr[var VAR_17])
	}
	if(gamevar script_time > var VAR_16)
	 {
			var VAR_16 = gamevar script_time + int 100 + call randomize_int(int 0, int 200)
			var index = call randomize_int(int 0, int 3)

			 /* play the sound 'torches2' */ 
			call play_loaded_sound(int 6, int 0, int 46, @arr[var index])
	}

._SCRIPT_5
	switch(var VAR_12)
	 {
	}
	var VAR_13 ++ 

._SCRIPT_6
	call load_char("eflayer")
	call load_char("iwarrior")
	call run_enemy_generator(var &enemy_gen_script, int 80)

._SCRIPT_7

._SCRIPT_8

._SCRIPT_9
