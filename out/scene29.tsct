/*
* This file was auto-generated using 'silver-reversing-sct' tool
* to better understand the scripts presented, one is encouraged to
* view the catalogs at: 
* https://github.com/nadavshemesh/silver-reversing-sct/blob/master/docs/index.md
*
* Any further information and support of this project please visit:
* https://github.com/nadavshemesh/silver-reversing-sct 
*/


._DATA
	finnegan	0	
	dick	0	
	init_position	{ 2737, 123, 4056 }	
	init_position2	{ 2787, 123, 3780 }	
	init_position1	{ 2580, 123, 3821 }	
	ai_script	{ 9, 2, finnegan, 3, dick, 3, dick, 3, dick, 8 }	
	ai_script2	{ 7, 8 }	
	ai_script1	{ 7, 8 }	
	VAR_26	{ 0, 0 }	
	fx_position	{ -3830, 2300, -2210 }	
	VAR_29	{ -2165, 2300, -3895 }	
	VAR_34	-1

._on_load
	execute SCRIPT_9
	call load_item(int 93 /* cutlass */ )
	call load_item(int 91 /* rapier */ )
	switch(gamevar room_state)
	 {
			case 1
				execute SCRIPT_3
				break 
			case 2
				execute SCRIPT_6
				break 
			default 
				break 
	}

._infinite_loop
	execute SCRIPT_11
	switch(gamevar room_state)
	 {
			case 1
				execute SCRIPT_4
				break 
			case 2
				execute SCRIPT_7
				break 
			default 
				break 
	}

._on_exit
	switch(gamevar room_state)
	 {
			case 1
				execute SCRIPT_5
				gamevar room_state = int 2
				break 
			case 2
				execute SCRIPT_8
				gamevar room_state = int 0
				break 
			default 
				break 
	}

._SCRIPT_3
	var muscles = call create_enemy(int 30, int 0, var &init_position, int 175)
	var dick = call create_enemy(int 31, int 0, var &init_position1, int 15)
	var finnegan = call create_enemy(int 32, int 0, var &init_position2, int 300)
	call add_item_to_char(var finnegan, int 42 /* bread */ , int 1, int 0)
	call play_char_ai_script(var muscles, var &ai_script)
	call play_char_ai_script(var dick, var &ai_script1)
	call play_char_ai_script(var finnegan, var &ai_script2)
	call func_50(var muscles, int 8192)
	call func_50(var dick, int 8192)
	call func_50(var finnegan, int 8192)
	call func_104(var dick, int 7, int 3)

._SCRIPT_4
	if(var VAR_34 != var VAR_31)
	 {
			var VAR_34 = var VAR_31
			call log_obj(var VAR_31)
	}
	switch(var VAR_31)
	 {
			case 0
				var VAR_33 = int 0
				if(call is_char_handle_in_level(int 2490368 /* MUSCLES */ ))
				 {
						if(call func_88(var muscles))
						 {
								var VAR_32 = int 1
						}
				}
				else
				 {
						var VAR_33 ++ 
				}
				if(call is_char_handle_in_level(int 6422528))
				 {
						if(call func_88(var dick))
						 {
								var VAR_32 = int 1
						}
				}
				else
				 {
						var VAR_33 ++ 
				}
				if(call is_char_handle_in_level(int 5767168))
				 {
						if(call func_88(var finnegan))
						 {
								var VAR_32 = int 1
						}
				}
				else
				 {
						var VAR_33 ++ 
				}
				if(var VAR_32)
				 {
						if(call is_char_handle_in_level(int 2490368 /* MUSCLES */ ))
						 {
								call func_46(var muscles, int 13)
						}
						if(call is_char_handle_in_level(int 6422528))
						 {
								call func_46(var dick, int 13)
						}
						if(call is_char_handle_in_level(int 5767168))
						 {
								call func_46(var finnegan, int 13)
						}
						var VAR_31 ++ 
				}
				else
				 {
						if(var VAR_33)
						 {
								var VAR_31 ++ 
						}
				}
				break 
			case 1
				if(call get_num_of_enemies() <= int 1)
				 {
						if(call ! is_char_handle_in_level(int 2490368 /* MUSCLES */ ))
						 {
								var muscles = call create_enemy_through_door(int 30, int 0, int 1, int 0)
								call set_char_running(var muscles)
								call func_19(var muscles, call get_selected_hero())
						}
						if(call ! is_char_handle_in_level(int 6422528))
						 {
								var dick = call create_enemy_through_door(int 31, int 0, int 1, int 0)
								call set_char_running(var dick)
								call func_19(var dick, call get_selected_hero())
								call add_item_to_char(var dick, int 40 /* apple */ , int 1, int 0)
						}
						if(call ! is_char_handle_in_level(int 5767168))
						 {
								var finnegan = call create_enemy_through_door(int 32, int 0, int 1, int 0)
								call set_char_running(var finnegan)
								call func_19(var finnegan, call get_selected_hero())
						}
						var VAR_31 ++ 
				}
				break 
			case 2
				break 
	}

._SCRIPT_5

._SCRIPT_6

._SCRIPT_7

._SCRIPT_8

._SCRIPT_9
	call log("it's_raining")
	call play_3d_fx("RAIN", var &fx_position, var &VAR_29, int 0)
	execute SCRIPT_10

._SCRIPT_10
	call load_sound_set(int 25)

	 /* play the sound 'blank' */ 
	call play_loaded_sound(int 1, int -1, int 25, int 0)
	var thunrumb_sound_ref = call play_loaded_sound(int 3, int -1, int 25, int 0)
	var VAR_10 = int 70
	call set_sound_volume(var thunrumb_sound_ref, var VAR_10)
	var VAR_9 = int 1

._SCRIPT_11
	if(var ! VAR_9)
	 {
			call log("random_rain_fx: Rain SFX not initialised! See Marc")
			exit_script 
	}
	switch(var VAR_13)
	 {
			case 0
				if(var VAR_12)
				 {
						var VAR_15 = int 1
						var VAR_13 ++ 
						var VAR_14 = int 0
				}
				break 
			case 1
				if(var VAR_10 < int 200)
				 {
						var VAR_16 = var VAR_14 % int 2
						if(var VAR_16 == int 0)
						 {
								var VAR_10 += var VAR_15
								call set_sound_volume(var thunrumb_sound_ref, var VAR_10)
						}
				}
				else
				 {
						var VAR_13 ++ 
						var VAR_14 = int 0
				}
				break 
			case 2
				if(var VAR_14 > int 150)
				 {
						var VAR_13 ++ 
						var VAR_14 = int 0
				}
				break 
			case 3
				if(var VAR_10 > int 70)
				 {
						var VAR_16 = var VAR_14 % int 2
						if(var VAR_16)
						 {
								var VAR_10 -= var VAR_15
								call set_sound_volume(var thunrumb_sound_ref, var VAR_10)
						}
				}
				else
				 {
						var VAR_12 = int 0
						var VAR_13 = int 0
						var VAR_14 = int 0
				}
				break 
	}
	execute SCRIPT_12
	execute SCRIPT_13
	var VAR_14 ++ 

._SCRIPT_12
	switch(var VAR_18)
	 {
			case 0
				var VAR_19 = int 0
				var VAR_20 = call randomize_int(int 1200, int 1801)
				var VAR_18 ++ 
				break 
			case 1
				if(var VAR_19 > var VAR_20)
				 {
						var thunstrk_sound_ref = call play_loaded_sound(int 4, int 0, int 25, int 0)
						call set_sound_volume(var thunstrk_sound_ref, call randomize_int(int 100, int 201))
						call func_11a(var thunstrk_sound_ref, call randomize_int(int 0, int 128))
						if(var ! VAR_12)
						 {
								var VAR_12 = int 1
						}
						var VAR_18 ++ 
						var VAR_19 = int 0
				}
				break 
			case 2
				if(var VAR_19 > int 200)
				 {
						var VAR_18 = int 0
						var VAR_19 = int 0
				}
				break 
	}
	var VAR_19 ++ 

._SCRIPT_13
	switch(var VAR_22)
	 {
			case 0
				if(gamevar scene_counter > int 600)
				 {
						var VAR_22 ++ 
				}
				break 
			case 1
				var VAR_23 = int 0
				call reset_local_timer()
				var VAR_25 = call randomize_int(int 400, int 601)
				var VAR_22 ++ 
				break 
			case 2
				if(call is_local_timer_greater_than(var VAR_25))
				 {
						call apply_effect_on_char(gamevar misc_fx_scripts, int 6, int 0, int 0)
						call reset_local_timer()
						var VAR_26 = int 255
						var VAR_25 = call randomize_int(int 1, int 31)
						var VAR_23 = int 0
						var VAR_22 ++ 
				}
				break 
			case 3
				if(call is_local_timer_greater_than(var VAR_25))
				 {
						var VAR_26 -= int 4 * var VAR_25
						var verwind_sound_ref = call play_loaded_sound(int 5, int 0, int 25, int 0)
						call set_sound_volume(var verwind_sound_ref, var VAR_26)
						var VAR_25 = int 255 - var VAR_26
						var VAR_23 = int 0
						var VAR_22 ++ 
				}
				break 
			case 4
				if(var VAR_23 > var VAR_25)
				 {
						var verwind_sound_ref = call play_loaded_sound /* 'thunstrk' */ (int 4, int 0, int 25, int 0)
						call set_sound_volume(var verwind_sound_ref, var VAR_26)
						if(var ! VAR_12)
						 {
								var VAR_12 = int 1
						}
						var VAR_22 ++ 
						var VAR_23 = int 0
				}
				break 
			case 5
				if(var VAR_23 > int 100)
				 {
						var VAR_22 = int 1
						var VAR_23 = int 0
				}
				break 
	}
	var VAR_23 ++ 
