/*
* This file was auto-generated using 'silver-reversing-sct' tool
* to better understand the scripts presented, one is encouraged to
* view the catalogs at: 
* https://github.com/nadavshemesh/silver-reversing-sct/blob/master/docs/index.md
*
* Any further information and support of this project please visit:
* https://github.com/nadavshemesh/silver-reversing-sct 
*/


._DATA
	VAR_17	{ 0, 0 }	
	fx_position	{ -2600, 2199, -4625 }	
	VAR_27	{ 0, 0 }	
	init_position	{ 2197, -950, 6015 }	
	init_position1	{ 1921, -950, 6291 }	
	init_position4	{ 2071, -950, 6141 }	
	init_position2	{ 1935, 169, 4296 }	
	init_position3	{ -34, 169, 5493 }	
	ai_script	{ 0, 898, 169, 4944, 0, 1935, 169, 4296, 7, 8 }	
	ai_script1	{ 0, 652, 169, 5089, 0, -34, 169, 5493, 7, 8 }	
	VAR_47	{ 848, 169, 4975 }	
	VAR_48	{ 630, 169, 5085, 1936, 35, 5384, 2183, 35, 5535 }	
	VAR_55	{ 287, -878, 5488, 1375, -878, 4835 }

._on_load
	execute SCRIPT_3
	call play_bgm("RAINPT1")
	if(gamevar is_room_cleared)
	 {
			execute SCRIPT_9
	}
	else
	 {
			switch(gamevar room_state)
			 {
					case 1
						execute SCRIPT_5
						break 
					case 2
						execute SCRIPT_8
						break 
					case 0
						break 
			}
	}

._infinite_loop
	execute SCRIPT_11
	if(gamevar !is_room_cleared)
	 {
			switch(gamevar room_state)
			 {
					case 1
						execute SCRIPT_4
						break 
					case 2
						execute SCRIPT_7
						break 
					case 0
						break 
			}
	}

._on_exit
	if(gamevar !is_room_cleared)
	 {
			switch(gamevar room_state)
			 {
					case 1
						gamevar room_state ++ 
						break 
					case 2
						break 
					case 0
						break 
					default 
						gamevar room_state = int 0
						break 
			}
	}

._SCRIPT_3
	call log("it's_raining")
	call play_3d_fx("RAIN", var &fx_position, "w", int 0)
	execute SCRIPT_10

._SCRIPT_4
	execute SCRIPT_6
	switch(var VAR_23)
	 {
			case 0
				if(call func_d1(var &VAR_55))
				 {
						var VAR_23 ++ 
				}
				else
				 {
						if(call func_8a(var &VAR_55))
						 {
								var VAR_23 ++ 
						}
				}
				break 
			case 1
				if(call is_char_handle_in_level(int 7143424))
				 {
						gamevar script_object = var lieutenant
						gamevar *character_stats_p+15 = int 3000
				}
				if(call is_char_handle_in_level(int 7143425))
				 {
						gamevar script_object = var lieutenant1
						gamevar *character_stats_p+15 = int 3000
				}
				var VAR_27 = int 4
				var VAR_25 = int 7
				var VAR_24 = int 0
				var VAR_23 ++ 
				break 
			case 2
				break 
	}
	var VAR_24 ++ 

._SCRIPT_5
	var gstqustn_anim = call load_anim("gstqustn")
	var no_anim = call load_anim("no")
	var yes_anim = call load_anim("yes")
	var confused_anim = call load_anim("confused")
	var talkfstb_anim = call load_anim("talkfstb")
	var lieutenant = call create_enemy(int 11, int 0, var &init_position, int 270)
	gamevar script_object = var lieutenant
	gamevar *character_stats_p+15 = int 0
	gamevar *character_stats_p+16 = int 0
	call func_106(var lieutenant, int 1, int 0, int 1)
	call func_50(var lieutenant, int 2)
	var lieutenant1 = call create_enemy(int 11, int 1, var &init_position1, int 132)
	gamevar script_object = var lieutenant1
	gamevar *character_stats_p+15 = int 0
	gamevar *character_stats_p+16 = int 0
	call func_106(var lieutenant1, int 1, int 0, int 1)
	call func_50(var lieutenant1, int 2)
	var archer = call create_enemy(int 17, int 0, var &init_position2, int 304)
	gamevar script_object = var archer
	gamevar *character_stats_p+15 = int 3000
	gamevar *character_stats_p+16 = int 0
	call func_106(var archer, int 1, int 0, int 2)
	call func_50(var archer, int 1539)
	call func_106(var archer, int 9, int 5, var &VAR_47)
	call func_106(var archer, int 9, int 6, int 1)
	call func_106(var archer, int 0, int 3, int 180)
	call set_char_init_state(var archer, int 13)
	call play_char_ai_script(var archer, var &ai_script)
	var archer1 = call create_enemy(int 17, int 1, var &init_position3, int 114)
	gamevar script_object = var archer1
	gamevar *character_stats_p+15 = int 3000
	gamevar *character_stats_p+16 = int 0
	call func_106(var archer1, int 1, int 0, int 2)
	call func_50(var archer1, int 1539)
	call func_106(var archer1, int 9, int 5, var &VAR_48)
	call func_106(var archer1, int 9, int 6, int 1)
	call func_106(var archer1, int 0, int 3, int 180)
	call set_char_init_state(var archer1, int 13)
	call play_char_ai_script(var archer1, var &ai_script1)
	var nflatnose = call create_char(var &init_position4, "nflatnose", int 285, int 13)
	call set_char_running(var nflatnose)
	gamevar script_object = var nflatnose
	gamevar *character_movement_p+60 = int 1
	var DAVID = call get_char_handle(int 65536)
	var SEKUNE = call get_char_handle(int 786432)
	call add_item_to_char(var lieutenant, int 108 /* quiver */ , int 1, int 0)

._SCRIPT_6
	if(var VAR_25 == int 0)
	 {
			var VAR_26 ++ 
			if(var VAR_26 > int 80)
			 {
					if(call is_char_handle_in_level(int 7143425))
					 {
							call play_char_anim(var lieutenant1, var talkfstb_anim, int 0)
					}
					var VAR_25 ++ 
					var VAR_26 = int 0
			}
	}
	if(var VAR_25 == int 1)
	 {
			if(call is_char_handle_in_level(int 7143425))
			 {
					if(call func_5c(var lieutenant1))
					 {
							call play_char_anim(var lieutenant1, var gstqustn_anim, int 0)
					}
					var VAR_25 ++ 
			}
			else
			 {
					var VAR_25 ++ 
			}
	}
	if(var VAR_25 == int 2)
	 {
			if(call is_char_handle_in_level(int 7143425))
			 {
					if(call func_5c(var lieutenant1))
					 {
							call play_char_anim(var nflatnose, var talkfstb_anim, int 0)
					}
					var VAR_25 ++ 
			}
			else
			 {
					var VAR_25 ++ 
			}
	}
	if(var VAR_25 == int 3)
	 {
			if(call func_5c(var nflatnose))
			 {
					call play_char_anim(var nflatnose, var confused_anim, int 0)
					var VAR_25 ++ 
			}
	}
	if(var VAR_25 == int 4)
	 {
			if(call func_5c(var nflatnose))
			 {
					if(call is_char_handle_in_level(int 7143425))
					 {
							call play_char_anim(var lieutenant1, var gstqustn_anim, int 0)
					}
					var VAR_25 ++ 
			}
	}
	if(var VAR_25 == int 5)
	 {
			if(call is_char_handle_in_level(int 7143425))
			 {
					if(call func_5c(var lieutenant1))
					 {
							call play_char_anim(var nflatnose, var no_anim, int 0)
							var VAR_25 ++ 
					}
			}
			else
			 {
					call play_char_anim(var nflatnose, var no_anim, int 0)
					var VAR_25 ++ 
			}
	}
	if(var VAR_25 == int 6)
	 {
			if(call func_5c(var nflatnose))
			 {
					if(call is_char_handle_in_level(int 7143425))
					 {
							call play_char_anim(var lieutenant1, var talkfstb_anim, int 0)
					}
					var VAR_25 = int 0
			}
	}
	if(var VAR_25 == int 7)
	 {
			call func_2b(var nflatnose, int 0)
			var VAR_25 ++ 
	}
	if(var VAR_25 == int 8)
	 {
			if(call is_char_standing(var nflatnose))
			 {
					call remove_char(var nflatnose)
					var VAR_25 ++ 
			}
	}

._SCRIPT_7

._SCRIPT_8

._SCRIPT_9

._SCRIPT_10
	call load_sound_set(int 25)

	 /* play the sound 'blank' */ 
	call play_loaded_sound(int 1, int -1, int 25, int 0)
	var thunrumb_sound_ref = call play_loaded_sound(int 3, int -1, int 25, int 0)
	var VAR_1 = int 70
	call set_sound_volume(var thunrumb_sound_ref, var VAR_1)
	var VAR_0 = int 1

._SCRIPT_11
	if(var ! VAR_0)
	 {
			call log("random_rain_fx: Rain SFX not initialised! See Marc")
			exit_script 
	}
	switch(var VAR_4)
	 {
			case 0
				if(var VAR_3)
				 {
						var VAR_6 = int 1
						var VAR_4 ++ 
						var VAR_5 = int 0
				}
				break 
			case 1
				if(var VAR_1 < int 200)
				 {
						var VAR_7 = var VAR_5 % int 2
						if(var VAR_7 == int 0)
						 {
								var VAR_1 += var VAR_6
								call set_sound_volume(var thunrumb_sound_ref, var VAR_1)
						}
				}
				else
				 {
						var VAR_4 ++ 
						var VAR_5 = int 0
				}
				break 
			case 2
				if(var VAR_5 > int 150)
				 {
						var VAR_4 ++ 
						var VAR_5 = int 0
				}
				break 
			case 3
				if(var VAR_1 > int 70)
				 {
						var VAR_7 = var VAR_5 % int 2
						if(var VAR_7)
						 {
								var VAR_1 -= var VAR_6
								call set_sound_volume(var thunrumb_sound_ref, var VAR_1)
						}
				}
				else
				 {
						var VAR_3 = int 0
						var VAR_4 = int 0
						var VAR_5 = int 0
				}
				break 
	}
	execute SCRIPT_12
	execute SCRIPT_13
	var VAR_5 ++ 

._SCRIPT_12
	switch(var VAR_9)
	 {
			case 0
				var VAR_10 = int 0
				var VAR_11 = call randomize_int(int 1200, int 1801)
				var VAR_9 ++ 
				break 
			case 1
				if(var VAR_10 > var VAR_11)
				 {
						var thunstrk_sound_ref = call play_loaded_sound(int 4, int 0, int 25, int 0)
						call set_sound_volume(var thunstrk_sound_ref, call randomize_int(int 100, int 201))
						call func_11a(var thunstrk_sound_ref, call randomize_int(int 0, int 128))
						if(var ! VAR_3)
						 {
								var VAR_3 = int 1
						}
						var VAR_9 ++ 
						var VAR_10 = int 0
				}
				break 
			case 2
				if(var VAR_10 > int 200)
				 {
						var VAR_9 = int 0
						var VAR_10 = int 0
				}
				break 
	}
	var VAR_10 ++ 

._SCRIPT_13
	switch(var VAR_13)
	 {
			case 0
				if(gamevar scene_counter > int 600)
				 {
						var VAR_13 ++ 
				}
				break 
			case 1
				var VAR_14 = int 0
				call reset_local_timer()
				var VAR_16 = call randomize_int(int 400, int 601)
				var VAR_13 ++ 
				break 
			case 2
				if(call is_local_timer_greater_than(var VAR_16))
				 {
						call apply_effect_on_char(gamevar misc_fx_scripts, int 6, int 0, int 0)
						call reset_local_timer()
						var VAR_17 = int 255
						var VAR_16 = call randomize_int(int 1, int 31)
						var VAR_14 = int 0
						var VAR_13 ++ 
				}
				break 
			case 3
				if(call is_local_timer_greater_than(var VAR_16))
				 {
						var VAR_17 -= int 4 * var VAR_16
						var verwind_sound_ref = call play_loaded_sound(int 5, int 0, int 25, int 0)
						call set_sound_volume(var verwind_sound_ref, var VAR_17)
						var VAR_16 = int 255 - var VAR_17
						var VAR_14 = int 0
						var VAR_13 ++ 
				}
				break 
			case 4
				if(var VAR_14 > var VAR_16)
				 {
						var verwind_sound_ref = call play_loaded_sound /* 'thunstrk' */ (int 4, int 0, int 25, int 0)
						call set_sound_volume(var verwind_sound_ref, var VAR_17)
						if(var ! VAR_3)
						 {
								var VAR_3 = int 1
						}
						var VAR_13 ++ 
						var VAR_14 = int 0
				}
				break 
			case 5
				if(var VAR_14 > int 100)
				 {
						var VAR_13 = int 1
						var VAR_14 = int 0
				}
				break 
	}
	var VAR_14 ++ 
