/*
* This file was auto-generated using 'silver-reversing-sct' tool
* to better understand the scripts presented, one is encouraged to
* view the catalogs at: 
* https://github.com/nadavshemesh/silver-reversing-sct/blob/master/docs/index.md
*
* Any further information and support of this project please visit:
* https://github.com/nadavshemesh/silver-reversing-sct 
*/


._DATA
	VAR_0	0	
	VAR_2	0	
	VAR_4	0	
	david	0	
	VAR_6	0	
	tele_position	{ 756, -924, 386 }	
	tele_position1	{ -549, -924, -1622 }	
	tele_position2	{ -479, -924, -1363 }	
	tele_position3	{ -433, -924, -1591 }	
	VAR_16	0	
	nvillager	0	
	ai_script	{ 15, 0, 657, -924, -1115, 16, VAR_2, 1, 3, VAR_22, 0, 3, VAR_23, 0, 8 }	
	VAR_22	"unc_fall"	
	VAR_23	"unc_pant"	
	VAR_24	{ 0, -277, -924, -1440, 35, 8 }	
	ai_script2	{ 15, 0, 538, -924, -1037, 1, nvillager, 16, VAR_0, 1, 3, VAR_26, 0, 5, 20, 1, nvillager, 16, VAR_16, 1, 3, VAR_27, 0, 16, VAR_4, 1, 1, david, 24, 1, 5, 120, 8 }	
	VAR_26	"kiki"	
	VAR_27	"kiki"	
	ai_script1	{ 15, 0, 724, -924, -1007, 1, nvillager, 16, VAR_0, 1, 3, VAR_29, 0, 4, VAR_16, 5, 10, 1, nvillager, 16, VAR_0, 1, 3, VAR_30, 0, 16, VAR_4, 1, 1, VAR_6, 24, 1, 8 }	
	VAR_29	"kiki"	
	VAR_30	"kiki"	
	VAR_48	{ 0, 0 }	
	fx_position	{ -1260, 815, 2180 }	
	VAR_51	{ -190, 815, -290 }	
	init_position	{ 765, -924, -2110 }	
	init_position1	{ 951, -924, -2572 }	
	init_position2	{ 612, -924, -2562 }	

._on_load
	call load_sound_set(int 81)
	execute SCRIPT_10
	var VAR_8 = call func_6f()
	var VAR_9 = int 1 - var VAR_8
	var VAR_9 = int 2
	var david = call get_david_char()
	var VAR_6 = call get_next_char_from_list()
	if(var VAR_6)
	 {
			var VAR_7 = call get_next_char_from_list()
	}
	else
	 {
			var VAR_6 = var david
	}
	if(var ! VAR_7)
	 {
			var VAR_7 = var david
	}
	switch(gamevar room_state)
	 {
			case 1
				execute SCRIPT_3
				break 
			case 2
				execute SCRIPT_7
				break 
			default 
				break 
	}

._infinite_loop
	execute SCRIPT_12
	switch(gamevar room_state)
	 {
			case 1
				execute SCRIPT_4
				break 
			case 2
				execute SCRIPT_8
				break 
			default 
				break 
	}

._on_exit
	switch(gamevar room_state)
	 {
			case 1
				execute SCRIPT_5
				gamevar room_state ++ 
				break 
			case 2
				execute SCRIPT_9
				break 
			default 
				break 
	}

._SCRIPT_3
	call load_char("muscles")
	call load_char("dick")
	call load_char("longjohn")
	call load_item(int 93 /* cutlass */ )
	call load_item(int 91 /* rapier */ )
	var nvillager = call create_char(var &init_position, "nvillager", int 345, int 13)
	var muscles = call create_enemy(int 30, int 0, var &init_position1, int 342)
	var dick = call create_enemy(int 31, int 0, var &init_position2, int 350)
	call func_46(var muscles, int 0)
	call func_46(var dick, int 0)
	call set_char_init_state(var nvillager, int 13)
	call play_char_ai_script(var nvillager, var &ai_script)
	call add_item_to_char(var dick, int 42 /* bread */ , int 1, int 0)
	gamevar script_object = var nvillager
	gamevar *character_movement_p+60 = int 1
	gamevar HP = int 100000
	gamevar *object_p+6 |= int 67108864

._SCRIPT_4
	switch(var VAR_56)
	 {
			case 0
				call set_input_system(int 2)
				execute SCRIPT_6
				var VAR_57 = int 80
				var VAR_56 ++ 
				break 
			case 1
				if(var VAR_57)
				 {
						execute SCRIPT_6
						var VAR_57 -- 
				}
				else
				 {
						call set_char_init_state(var muscles, int 13)
						call set_char_init_state(var dick, int 13)
						call play_char_ai_script(var muscles, var &ai_script1)
						call play_char_ai_script(var dick, var &ai_script2)
						var VAR_56 ++ 
				}
				break 
			case 2
				if(var ! VAR_16)
				 {
						execute SCRIPT_6
				}
				else
				 {
						if(var VAR_4)
						 {
								call set_input_system(int 1)
								if(call is_char_handle_in_level(int 2097152 /* VILLAGER */ ))
								 {
										call func_115(var nvillager, var &VAR_24)
								}
								var VAR_57 = int 300
								var VAR_56 ++ 
						}
				}
				break 
			case 3
				if(var VAR_57)
				 {
						var VAR_57 -- 
				}
				else
				 {
						var longjohn = call create_enemy_through_door(int 28, int 0, int 1, int 0)
						call set_char_running(var longjohn)
						call func_19(var longjohn, call get_selected_hero())
						var VAR_56 ++ 
				}
				break 
	}
	if(var VAR_0)
	 {
			var VAR_1 ++ 
			if(var VAR_1 == int 10)
			 {

					 /* play the sound 'tselect1' */ 
					call play_loaded_sound(int 3, int 0, int 81, int 0)
			}
			if(var VAR_1 > int 15)
			 {

					 /* play the sound 'punch1' */ 
					call play_loaded_sound(int 2, int 0, int 81, int 0)
					var VAR_1 = int 0
					var VAR_0 = int 0
			}
	}
	if(var VAR_2)
	 {
			var VAR_3 ++ 
			if(var VAR_3 > int 16)
			 {
					var VAR_2 = int 0

					 /* play the sound 'smlgrunt' */ 
					call play_loaded_sound(int 1, int 0, int 81, int 0)
			}
	}

._SCRIPT_5

._SCRIPT_6
	if(var VAR_8 == int 1)
	 {
			call char_teleport_to_pos(var david, "A", int 0)
			call char_teleport_to_pos(var VAR_6, "x", int 0)
			call char_teleport_to_pos(var VAR_7, var &tele_position, int 0)
	}
	else
	 {
			call char_teleport_to_pos(var david, var &tele_position1, int 0)
			call char_teleport_to_pos(var VAR_6, var &tele_position2, int 0)
			call char_teleport_to_pos(var VAR_7, var &tele_position3, int 0)
	}

._SCRIPT_7

._SCRIPT_8

._SCRIPT_9

._SCRIPT_10
	call log_string("it's_raining")
	call play_3d_fx("RAIN", var &fx_position, var &VAR_51, int 0)
	execute SCRIPT_11

._SCRIPT_11
	call load_sound_set(int 25)

	 /* play the sound 'blank' */ 
	call play_loaded_sound(int 1, int -1, int 25, int 0)
	var thunrumb_sound_ref = call play_loaded_sound(int 3, int -1, int 25, int 0)
	var VAR_32 = int 70
	call set_sound_volume(var thunrumb_sound_ref, var VAR_32)
	var VAR_31 = int 1

._SCRIPT_12
	if(var ! VAR_31)
	 {
			call log_string("random_rain_fx: Rain SFX not initialised! See Marc")
			exit_script 
	}
	switch(var VAR_35)
	 {
			case 0
				if(var VAR_34)
				 {
						var VAR_37 = int 1
						var VAR_35 ++ 
						var VAR_36 = int 0
				}
				break 
			case 1
				if(var VAR_32 < int 200)
				 {
						var VAR_38 = var VAR_36 % int 2
						if(var VAR_38 == int 0)
						 {
								var VAR_32 += var VAR_37
								call set_sound_volume(var thunrumb_sound_ref, var VAR_32)
						}
				}
				else
				 {
						var VAR_35 ++ 
						var VAR_36 = int 0
				}
				break 
			case 2
				if(var VAR_36 > int 150)
				 {
						var VAR_35 ++ 
						var VAR_36 = int 0
				}
				break 
			case 3
				if(var VAR_32 > int 70)
				 {
						var VAR_38 = var VAR_36 % int 2
						if(var VAR_38)
						 {
								var VAR_32 -= var VAR_37
								call set_sound_volume(var thunrumb_sound_ref, var VAR_32)
						}
				}
				else
				 {
						var VAR_34 = int 0
						var VAR_35 = int 0
						var VAR_36 = int 0
				}
				break 
	}
	execute SCRIPT_13
	execute SCRIPT_14
	var VAR_36 ++ 

._SCRIPT_13
	switch(var VAR_40)
	 {
			case 0
				var VAR_41 = int 0
				var VAR_42 = call randomize_int(int 1200, int 1801)
				var VAR_40 ++ 
				break 
			case 1
				if(var VAR_41 > var VAR_42)
				 {
						var thunstrk_sound_ref = call play_loaded_sound(int 4, int 0, int 25, int 0)
						call set_sound_volume(var thunstrk_sound_ref, call randomize_int(int 100, int 201))
						call func_11a(var thunstrk_sound_ref, call randomize_int(int 0, int 128))
						if(var ! VAR_34)
						 {
								var VAR_34 = int 1
						}
						var VAR_40 ++ 
						var VAR_41 = int 0
				}
				break 
			case 2
				if(var VAR_41 > int 200)
				 {
						var VAR_40 = int 0
						var VAR_41 = int 0
				}
				break 
	}
	var VAR_41 ++ 

._SCRIPT_14
	switch(var VAR_44)
	 {
			case 0
				if(gamevar scene_counter > int 600)
				 {
						var VAR_44 ++ 
				}
				break 
			case 1
				var VAR_45 = int 0
				call reset_local_timer()
				var VAR_47 = call randomize_int(int 400, int 601)
				var VAR_44 ++ 
				break 
			case 2
				if(call is_local_timer_greater_than(var VAR_47))
				 {
						call apply_effect_on_char(gamevar misc_fx_scripts, int 6, int 0, int 0)
						call reset_local_timer()
						var VAR_48 = int 255
						var VAR_47 = call randomize_int(int 1, int 31)
						var VAR_45 = int 0
						var VAR_44 ++ 
				}
				break 
			case 3
				if(call is_local_timer_greater_than(var VAR_47))
				 {
						var VAR_48 -= int 4 * var VAR_47
						var verwind_sound_ref = call play_loaded_sound(int 5, int 0, int 25, int 0)
						call set_sound_volume(var verwind_sound_ref, var VAR_48)
						var VAR_47 = int 255 - var VAR_48
						var VAR_45 = int 0
						var VAR_44 ++ 
				}
				break 
			case 4
				if(var VAR_45 > var VAR_47)
				 {
						var verwind_sound_ref = call play_loaded_sound /* 'thunstrk' */ (int 4, int 0, int 25, int 0)
						call set_sound_volume(var verwind_sound_ref, var VAR_48)
						if(var ! VAR_34)
						 {
								var VAR_34 = int 1
						}
						var VAR_44 ++ 
						var VAR_45 = int 0
				}
				break 
			case 5
				if(var VAR_45 > int 100)
				 {
						var VAR_44 = int 1
						var VAR_45 = int 0
				}
				break 
	}
	var VAR_45 ++ 
