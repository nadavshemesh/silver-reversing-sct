/*
* This file was auto-generated using 'silver-reversing-sct' tool
* to better understand the scripts presented, one is encouraged to
* view the catalogs at: 
* https://github.com/nadavshemesh/silver-reversing-sct/blob/master/docs/index.md
*
* Any further information and support of this project please visit:
* https://github.com/nadavshemesh/silver-reversing-sct 
*/


._DATA
	fx_position	{ -587, 0, 7000 }	
	VAR_3	{ 4000, 0, -1742 }	
	VAR_5	{ 0, 0, 0 }	
	VAR_10	{ -1006567424, -992919552, 1101004800 }	
	VAR_11	{ -3361, -1999, 8 }	
	VAR_12	{ -2609, -1999, -1 }	
	VAR_13	{ -1753, -1999, 6 }	
	VAR_14	{ 68, -1999, -1991 }	
	VAR_15	{ 28, -1999, -2782 }	
	VAR_16	{ 50, -1999, -3663 }	
	VAR_17	{ -3432, -2800, 23 }	
	VAR_18	{ -2663, -2800, 85 }	
	VAR_19	{ -1813, -2800, 77 }	
	VAR_20	{ 215, -2800, -2046 }	
	VAR_21	{ 133, -2800, -2835 }	
	VAR_22	{ 40, -2800, -3566 }	
	VAR_23	{ 10, -2935, -2600, 784, 24, 257, 8 }	
	VAR_24	{ 10, -2935, -2600, 784, 24, 257, 8 }	
	VAR_25	{ 10, -1970, -2600, 636, 24, 257, 8 }	
	VAR_26	{ 10, -784, -2600, -1780, 24, 257, 8 }	
	VAR_27	{ 10, -642, -2600, -2494, 24, 257, 8 }	
	VAR_28	{ 10, -799, -2600, -3258, 24, 257, 8 }	
	arr_1	{ VAR_11, VAR_12, VAR_13, VAR_14, VAR_15, VAR_16 }	
	arr	1	
	VAR_31	1	
	VAR_32	1	
	VAR_33	1	
	VAR_34	1	
	VAR_35	1	
	arr_2	{ VAR_17, VAR_18, VAR_19, VAR_20, VAR_21, VAR_22 }	
	arr_3	{ 341, 341, 341, 285, 285, 285 }	
	arr_4	{ VAR_23, VAR_24, VAR_25, VAR_26, VAR_27, VAR_28 }	
	VAR_49	{ 0, 0 }	

._on_load
	call load_sound_set(int 0)
	call stop_bgm(int 1)
	call load_sound_set(int 65)

	 /* play the sound 'dog1' */ 
	call play_loaded_sound(int 7, int -1, int 65, int 0)
	execute SCRIPT_11
	execute SCRIPT_12
	gamevar SMACKER_X = int 0
	gamevar SMACKER_Y = int 384
	call play_2d_anim("water", int 1, int 1, int 0)
	if(gamevar is_room_cleared)
	 {
			execute SCRIPT_10
	}
	else
	 {
			switch(gamevar room_state)
			 {
					case 1
						execute SCRIPT_5
						execute SCRIPT_17
						break 
					case 2
						execute SCRIPT_7
						break 
					case 3
						execute SCRIPT_9
						break 
					case 0
						break 
			}
	}

._infinite_loop
	execute SCRIPT_3
	execute SCRIPT_13
	if(gamevar !is_room_cleared)
	 {
			switch(gamevar room_state)
			 {
					case 1
						execute SCRIPT_4
						break 
					case 2
						execute SCRIPT_6
						break 
					case 3
						execute SCRIPT_8
						break 
					case 0
						break 
			}
	}

._on_exit
	if(gamevar !is_room_cleared)
	 {
			switch(gamevar room_state)
			 {
					case 1
						execute SCRIPT_14
						if(var ! VAR_1)
						 {
								gamevar room_state ++ 
								gamevar is_room_cleared = int 1
						}
						else
						 {
								execute SCRIPT_16
						}
						break 
					case 2
						gamevar room_state ++ 
						gamevar is_room_cleared = int 1
						break 
					case 3
						gamevar room_state ++ 
						gamevar is_room_cleared = int 1
						break 
					case 0
						break 
					default 
						gamevar room_state = int 0
						break 
			}
	}

._SCRIPT_3
	if(gamevar script_time > var VAR_52)
	 {
			var VAR_52 = gamevar script_time + int 100 + call randomize_int(int 0, int 100)

			 /* play the sound 'cwindlp' */ 
			call play_loaded_sound(int 9, int 0, int 65, int 0)
	}
	if(gamevar script_time > var VAR_51)
	 {
			var VAR_51 = gamevar script_time + int 300 + call randomize_int(int 0, int 300)

			 /* play the sound 'hwave1' */ 
			call play_loaded_sound(int 8, int 0, int 65, int 0)
	}
	if(gamevar script_time > var VAR_50)
	 {
			var VAR_50 = gamevar script_time + int 60 + call randomize_int(int 0, int 60)

			 /* play the sound 'inwindlp' */ 
			call play_loaded_sound(int 2, int 0, int 65, int 0)
	}

._SCRIPT_4
	switch(var VAR_40)
	 {
			case 0
				execute SCRIPT_14
				if(var VAR_1)
				 {
						execute SCRIPT_15
				}
				else
				 {
						var VAR_40 ++ 
				}
				break 
			case 1
				break 
	}
	var VAR_41 ++ 

._SCRIPT_5
	execute SCRIPT_18

._SCRIPT_6

._SCRIPT_7

._SCRIPT_8

._SCRIPT_9

._SCRIPT_10

._SCRIPT_11
	call play_3d_fx("SNOW", var &fx_position, var &VAR_3, int 0)

._SCRIPT_12
	if(gamevar *scene_info_p+4 & int 1)
	 {
			gamevar SMACKER_X = int 184
			gamevar SMACKER_Y = int 200
			var VAR_6 = call play_2d_anim("turt", int 0, int 1, var &VAR_5)
	}
	else
	 {
			var VAR_7 = int 1
	}

._SCRIPT_13
	if(var VAR_7)
	 {
			exit_script 
	}
	switch(var VAR_9)
	 {
	}

._SCRIPT_14
	var index = int 0
	var VAR_1 = int 0
	while(var VAR_42 < int 6)
	 {
			var VAR_1 += @arr[var VAR_42]
			var index ++ 
	}

._SCRIPT_15
	var index_1 = int 0
	while(var VAR_43 < int 6)
	 {
			if(@arr[var VAR_43])
			 {
					var VAR_44 = call func_ab(int 300, @arr_1[var index_1])
					if(var VAR_44)
					 {
							var draco_wyvern = call create_enemy(int 151, var index_1, @arr_2[var index_1], @arr_3[var index_1])
							call freeze_enemy(var draco_wyvern)
							call func_106(var draco_wyvern, int 1, int 0, int 1)
							call set_char_init_state(var draco_wyvern, int 13)
							call set_char_init_state(var draco_wyvern, int 13)
							call play_char_ai_script(var draco_wyvern, @arr_4[var index_1])
							@arr[var index_1]= int 0
					}
			}
			var index_1 ++ 
	}

._SCRIPT_16
	call save_pos_to_room_memory(int 0, var arr, var VAR_31, var VAR_32)
	call save_pos_to_room_memory(int 1, var VAR_33, var VAR_34, var VAR_35)

._SCRIPT_17
	if(call func_bf(int 0, gamevar CURRENT_LEVEL, gamevar CURRENT_SCENE))
	 {
			call set_door_particle_effect(int 0, var &VAR_46)
			var arr = var VAR_47
			var VAR_31 = var VAR_48
			var VAR_32 = var VAR_49
	}
	if(call func_bf(int 1, gamevar CURRENT_LEVEL, gamevar CURRENT_SCENE))
	 {
			call set_door_particle_effect(int 1, var &VAR_46)
			var VAR_33 = var VAR_47
			var VAR_34 = var VAR_48
			var VAR_35 = var VAR_49
	}

._SCRIPT_18
	call load_char("wyvern")
