/*
* This file was auto-generated using 'silver-reversing-sct' tool
* to better understand the scripts presented, one is encouraged to
* view the catalogs at: 
* https://github.com/nadavshemesh/silver-reversing-sct/blob/master/docs/index.md
*
* Any further information and support of this project please visit:
* https://github.com/nadavshemesh/silver-reversing-sct 
*/


._DATA
	VAR_17	{ 0, 0, 0, 0, 0, 0, 0, 0 }	
	fx_position	{ -9525, 4637, 6050 }	
	VAR_67	{ 1475, 4637, -4650 }	
	nfatbob	{ 0, 0 }	
	init_position	{ 3279, -1016, -6869 }	
	init_position1	{ 1902, -1016, -5028 }	
	init_position2	{ 1489, -1016, -5455 }	
	init_position3	{ 560, -1016, -2022 }	
	init_position4	{ 642, -1016, -1810 }	
	init_position5	{ 703, -1016, -2204 }	
	init_position6	{ 476, -1016, -2229 }	
	init_position7	{ 672, -1016, -2980 }	
	init_position8	{ 334, -1016, -2810 }	
	init_position9	{ 505, -1016, -2953 }	
	VAR_105	{ 1, 0, 0 }	
	VAR_106	{ 1, 0, 0 }	
	VAR_109	{ -365, 0, 1728 }	
	VAR_112	-1	
	walk_position	{ 6863, -1016, 596 }	
	position	{ 7842, -923, 442 }	
	VAR_125	{ 6099, -1017, 625 }	
	VAR_126	{ 5764, -1017, 421 }	
	arr	{ VAR_125, VAR_126 }	
	VAR_131	{ 6305, -1017, 855, 6281, -1017, 306 }	
	VAR_133	-1

._on_load
	call load_sound_set(int 0)
	execute SCRIPT_3
	call play_bgm("RAINPT1")
	gamevar SMACKER_X = int 0
	gamevar SMACKER_Y = int 176
	call play_2d_anim("wizwater", int 1, int 0, int 0)
	gamevar SMACKER_X = int 152
	gamevar SMACKER_Y = int 0
	call play_2d_anim("wizsmoke", int 1, int 0, int 0)
	if(gamevar is_room_cleared)
	 {
			execute SCRIPT_9
	}
	else
	 {
			switch(gamevar room_state)
			 {
					case 1
						execute SCRIPT_5
						break 
					case 2
						execute SCRIPT_8
						break 
					case 0
						break 
			}
	}

._infinite_loop
	execute SCRIPT_11
	if(gamevar !is_room_cleared)
	 {
			switch(gamevar room_state)
			 {
					case 1
						execute SCRIPT_4
						break 
					case 2
						execute SCRIPT_7
						break 
					case 0
						break 
			}
	}

._on_exit
	if(gamevar !is_room_cleared)
	 {
			switch(gamevar room_state)
			 {
					case 1
						gamevar room_state ++ 
						call set_scene_overwrite_act("RAIN", "rain_loc", int 1)
						call set_scene_overwrite_act("RAIN", "to_dock", int 1)
						call set_scene_overwrite_act("RAIN", "to_gate", int 1)
						call set_scene_overwrite_act("RAIN", "scaledwn", int 1)
						call func_116("RAIN", "scaledwn", int 2)
						call set_scene_overwrite_act("RAIN", "scene30", int 1)
						call set_scene_overwrite_act("RAIN", "tunlpas", int 1)
						call set_scene_overwrite_act("RAIN", "aft2arch", int 1)
						call set_scene_overwrite_act("RAIN", "ritearch", int 1)
						call set_scene_overwrite_act("RAIN", "aftsroad", int 1)
						call set_scene_overwrite_act("RAIN", "sroad", int 1)
						call set_scene_overwrite_act("RAIN", "opparch", int 1)
						call set_scene_overwrite_act("RAIN", "overarch", int 1)
						call set_scene_overwrite_act("RAIN", "newleft0", int 1)
						call set_scene_overwrite_act("RAIN", "to_centr", int 1)
						call set_scene_overwrite_act("RAIN", "bak2gate", int 1)
						call set_scene_overwrite_act("RAIN", "rainarch", int 1)
						call set_scene_overwrite_act("RAIN", "rainpt03", int 1)
						call set_scene_overwrite_act("RAIN", "aftastep", int 1)
						call set_scene_overwrite_act("RAIN", "tree_sqr", int 1)
						call func_71("rain", "to_dock", int 0, int 2)
						gamevar *scene_info_p+1 = int 1
						break 
					case 2
						if(gamevar *scene_info_p+3 & int 1)
						 {
								exit_script 
						}
						else
						 {
								gamevar room_state ++ 
						}
						break 
					case 0
						break 
					default 
						gamevar room_state = int 0
						break 
			}
	}

._SCRIPT_3
	call log_string("it's_raining")
	call play_3d_fx("RAIN", var &fx_position, var &VAR_67, int 0)
	execute SCRIPT_10

._SCRIPT_4
	execute SCRIPT_6
	if(var VAR_112 != var VAR_69)
	 {
			var VAR_112 = var VAR_69
			call log_var(var VAR_69)
	}
	if(var VAR_69 == int 0)
	 {
			call set_input_system(int 2)
			call char_walk_to(var DAVID, int 640, int -1016, int -2472)
			call char_walk_to(var SEKUNE, int 352, int -1016, int -2500)
			var VAR_69 ++ 
			var VAR_70 = int 0
	}
	if(var VAR_69 == int 1)
	 {
			if(call is_char_standing(var DAVID))
			 {
					if(call is_char_standing(var SEKUNE))
					 {
							var VAR_70 ++ 
							if(var VAR_70 > int 30)
							 {
									call start_dialog("S_DvdDuk", "NULL")
									var VAR_69 ++ 
									var VAR_70 = int 0
							}
					}
			}
	}
	if(var VAR_69 == int 2)
	 {
			if(call get_input_sys() != int 4)
			 {
					if(call func_6d() == int 9)
					 {
							call log_string("break9")
							call char_walk_to(var nwilliam, int -1137, int -1016, int 612)
							var VAR_69 ++ 
							var VAR_70 = int 0
					}
			}
	}
	if(var VAR_69 == int 3)
	 {
			var VAR_69 ++ 
			var VAR_70 = int 0
	}
	if(var VAR_69 == int 4)
	 {
			var VAR_70 ++ 
			if(var VAR_70 > int 30)
			 {
					call resume_conversation()
					var VAR_69 ++ 
					var VAR_70 = int 0
			}
	}
	if(var VAR_69 == int 5)
	 {
			if(call is_char_standing(var nwilliam))
			 {
					var VAR_70 ++ 
					if(var VAR_70 > int 40)
					 {
							call set_char_walking(var nbill)
							call set_char_walking(var nben)
							call set_char_walking(var nduke)
							call set_char_walking(var nclay)
							call set_char_walking(var nrichard)
							call set_char_walking(var nfatbob)
							call set_char_walking(var DAVID)
							call set_char_walking(var SEKUNE)
							var VAR_69 ++ 
							var VAR_70 = int 0
					}
			}
	}
	if(var VAR_69 == int 6)
	 {
			if(call get_input_sys() != int 4)
			 {
					var VAR_70 ++ 
					if(var VAR_70 > int 30)
					 {
							call char_walk_to(var nbill, int -1137, int -1016, int 612)
							call char_walk_to(var nben, int -1147, int -1016, int 612)
							call char_walk_to(var nduke, int -1157, int -1016, int 612)
							call char_walk_to(var nclay, int -1167, int -1016, int 612)
							call char_walk_to(var nrichard, int -1177, int -1016, int 612)
							call char_walk_to(var nfatbob, int -1187, int -1016, int 612)
							call char_walk_to(var SEKUNE, int -1197, int -1016, int 612)
							call char_walk_to(var DAVID, int -1217, int -1016, int 612)
							var VAR_69 ++ 
							var VAR_70 = int 0
					}
			}
	}
	if(var VAR_69 == int 7)
	 {
			var VAR_70 ++ 
			if(var VAR_70 > int 130)
			 {
					call func_124()
					call func_e6("haven", "h_campbt", var &VAR_109, int 3)
					var VAR_69 ++ 
					var VAR_70 = int 0
			}
	}

._SCRIPT_5
	var fsgrunt = call create_char(var &init_position, "fsgrunt", int 275, int 13)
	call add_item_to_char(var fsgrunt, int 16 /* shrtswrd */ , int 0, int 1)
	gamevar script_object = var fsgrunt
	gamevar HP = int 10
	gamevar script_object = var fsgrunt
	gamevar *object_p+6 |= int 67108864
	var nrebel = call create_char(var &init_position1, "nrebel!", int 95, int 13)
	call add_item_to_char(var nrebel, int 16 /* shrtswrd */ , int 0, int 1)
	gamevar script_object = var nrebel
	gamevar *object_p+6 |= int 67108864
	var nrebel1 = call create_char(var &init_position2, "nrebel1!", int 95, int 13)
	call add_item_to_char(var nrebel1, int 16 /* shrtswrd */ , int 0, int 1)
	gamevar script_object = var nrebel1
	gamevar *object_p+6 |= int 67108864
	var nbill = call create_char(var &init_position3, "nbill", int 115, int 13)
	var nben = call create_char(var &init_position4, "nben", int 115, int 13)
	var nduke = call create_char(var &init_position5, "nduke", int 60, int 13)
	var nwilliam = call create_char(var &init_position6, "nwilliam", int 100, int 13)
	var nclay = call create_char(var &init_position7, "nclay", int 20, int 13)
	var nrichard = call create_char(var &init_position8, "nrichard", int 25, int 13)
	var nfatbob = call create_char(var &init_position9, "nfatbob", int 0, int 13)
	call set_char_running(var fsgrunt)
	call set_char_running(var nrebel)
	call set_char_running(var nrebel1)
	call set_char_running(var nbill)
	call set_char_running(var nben)
	call set_char_running(var nduke)
	call set_char_running(var nwilliam)
	call set_char_running(var nclay)
	call set_char_running(var nrichard)
	call set_char_running(var nfatbob)
	var DAVID = call get_char_handle(int 65536)
	var SEKUNE = call get_char_handle(int 786432)
	var nduke = call get_char_handle(int 4456448)
	gamevar script_object = var nwilliam
	gamevar *character_movement_p+60 = int 1
	gamevar SMACKER_X = int 432
	gamevar SMACKER_Y = int 336
	call play_2d_anim("rebsleft", int 1, int 1, var &VAR_105)
	gamevar SMACKER_X = int 528
	gamevar SMACKER_Y = int 304
	call play_2d_anim("rebsrite", int 1, int 1, var &VAR_106)
	var VAR_18 = call func_40(int 0, int 8, int 1, int -1)
	var Scream1_sound_ref = call play_loaded_sound(int 228, int -1, int 0, int 0)

._SCRIPT_6
	if(var VAR_71 == int 0)
	 {
			call char_attack(var nrebel, var fsgrunt)
			call char_attack(var fsgrunt, var nrebel)
			call char_attack(var nrebel1, var fsgrunt)
			var VAR_71 ++ 
	}
	if(var VAR_71 == int 1)
	 {
			if(var VAR_110 == int 0)
			 {
					if(call func_87(var nrebel))
					 {
							call char_walk_to(var nrebel, int 666, int -1016, int -3361)
							call char_walk_to(var nrebel1, int 481, int -1016, int -3266)
							var VAR_110 = int 1
							var VAR_111 = int 1
							var VAR_71 ++ 
							var VAR_72 = int 0
					}
			}
	}
	if(var VAR_71 == int 2)
	 {
			call func_17(var nrebel, var nduke)
			call func_17(var nrebel1, var nduke)
			var VAR_71 ++ 
			var VAR_72 = int 0
	}

._SCRIPT_7
	if(var VAR_133 != var VAR_120)
	 {
			var VAR_133 = var VAR_120
			call log_var(var VAR_120)
	}
	switch(var VAR_120)
	 {
			case 0
				if(gamevar CLICKED_DOOR == int 0)
				 {
						gamevar CLICKED_DOOR = int -1
						var VAR_124 = gamevar control_char_p
						call char_walk_to_pos(var VAR_124, var &walk_position)
						var VAR_120 ++ 
						var VAR_121 = int 0
				}
				break 
			case 1
				if(call is_char_standing(var VAR_124))
				 {
						if(call func_12b(var VAR_124, var &VAR_131))
						 {
								call set_input_system(int 2)
								call char_turn_to_pos(var VAR_124, var &position)
								var david = call get_david_char()
								while(var david&&var ! VAR_129)
								 {
										if(var david != var VAR_124)
										 {
												call set_char_running(var david)
												call char_walk_to_pos(var david, @arr[var VAR_132])
												var index ++ 
										}
										var david = call get_next_char_from_list()
								}
								var VAR_120 ++ 
								var VAR_121 = int 0
						}
						else
						 {
								gamevar CLICKED_DOOR = int -1
								var VAR_120 = int 0
								var VAR_121 = int 0
						}
				}
				break 
			case 2
				if(var VAR_121 > int 60)
				 {
						call play_char_anim(var VAR_124, var imphorn_anim, int 0)

						 /* play the sound 'Intwind' */ 
						call play_loaded_sound(int 1, int 0, int 15, call get_char_movement_ptr(var VAR_124))
						var VAR_120 ++ 
						var VAR_121 = int 0
				}
				break 
			case 3
				if(call func_5c(var VAR_124))
				 {
						call func_ec(int 227, int 0, int 0, int 0)
						var VAR_120 ++ 
						var VAR_121 = int 0
				}
				break 
			case 4
				if(var VAR_121 > int 1)
				 {
						call func_b4(var VAR_18)
						call stop_playing_sound(var Scream1_sound_ref)
						var 1horn = call create_item(int 99)
						call remove_item_from_pie(var 1horn)
						gamevar *scene_info_p+3 &= int -2
						var VAR_18 = call func_40(int 0, int 8, int 2, int -1)
						call set_input_system(int 1)
						var VAR_120 ++ 
						var VAR_121 = int 0
				}
				break 
			case 5
				break 
	}
	var VAR_121 ++ 

._SCRIPT_8
	var imphorn_anim = call load_anim("imphorn")
	call load_sound_set(int 15)
	var VAR_18 = call func_40(int 0, int 8, int 1, int -1)
	var Scream1_sound_ref = call play_loaded_sound /* 'Scream1' */ (int 228, int -1, int 0, int 0)

._SCRIPT_9

._SCRIPT_10
	call load_sound_set(int 25)

	 /* play the sound 'blank' */ 
	call play_loaded_sound(int 1, int -1, int 25, int 0)
	var thunrumb_sound_ref = call play_loaded_sound(int 3, int -1, int 25, int 0)
	var VAR_1 = int 70
	call set_sound_volume(var thunrumb_sound_ref, var VAR_1)
	var VAR_0 = int 1

._SCRIPT_11
	if(var ! VAR_0)
	 {
			call log_string("random_rain_fx: Rain SFX not initialised! See Marc")
			exit_script 
	}
	switch(var VAR_4)
	 {
			case 0
				if(var VAR_3)
				 {
						var VAR_6 = int 1
						var VAR_4 ++ 
						var VAR_5 = int 0
				}
				break 
			case 1
				if(var VAR_1 < int 200)
				 {
						var VAR_7 = var VAR_5 % int 2
						if(var VAR_7 == int 0)
						 {
								var VAR_1 += var VAR_6
								call set_sound_volume(var thunrumb_sound_ref, var VAR_1)
						}
				}
				else
				 {
						var VAR_4 ++ 
						var VAR_5 = int 0
				}
				break 
			case 2
				if(var VAR_5 > int 150)
				 {
						var VAR_4 ++ 
						var VAR_5 = int 0
				}
				break 
			case 3
				if(var VAR_1 > int 70)
				 {
						var VAR_7 = var VAR_5 % int 2
						if(var VAR_7)
						 {
								var VAR_1 -= var VAR_6
								call set_sound_volume(var thunrumb_sound_ref, var VAR_1)
						}
				}
				else
				 {
						var VAR_3 = int 0
						var VAR_4 = int 0
						var VAR_5 = int 0
				}
				break 
	}
	execute SCRIPT_12
	execute SCRIPT_13
	var VAR_5 ++ 

._SCRIPT_12
	switch(var VAR_9)
	 {
			case 0
				var VAR_10 = int 0
				var VAR_11 = call randomize_int(int 1200, int 1801)
				var VAR_9 ++ 
				break 
			case 1
				if(var VAR_10 > var VAR_11)
				 {
						var thunstrk_sound_ref = call play_loaded_sound(int 4, int 0, int 25, int 0)
						call set_sound_volume(var thunstrk_sound_ref, call randomize_int(int 100, int 201))
						call func_11a(var thunstrk_sound_ref, call randomize_int(int 0, int 128))
						if(var ! VAR_3)
						 {
								var VAR_3 = int 1
						}
						var VAR_9 ++ 
						var VAR_10 = int 0
				}
				break 
			case 2
				if(var VAR_10 > int 200)
				 {
						var VAR_9 = int 0
						var VAR_10 = int 0
				}
				break 
	}
	var VAR_10 ++ 

._SCRIPT_13
	switch(var VAR_13)
	 {
			case 0
				if(gamevar scene_counter > int 600)
				 {
						var VAR_13 ++ 
				}
				break 
			case 1
				var VAR_14 = int 0
				call reset_local_timer()
				var VAR_16 = call randomize_int(int 400, int 601)
				var VAR_13 ++ 
				break 
			case 2
				if(call is_local_timer_greater_than(var VAR_16))
				 {
						call apply_effect_on_char(gamevar misc_fx_scripts, int 6, int 0, int 0)
						call reset_local_timer()
						var VAR_17 = int 255
						var VAR_16 = call randomize_int(int 1, int 31)
						var VAR_14 = int 0
						var VAR_13 ++ 
				}
				break 
			case 3
				if(call is_local_timer_greater_than(var VAR_16))
				 {
						var VAR_17 -= int 4 * var VAR_16
						var verwind_sound_ref = call play_loaded_sound(int 5, int 0, int 25, int 0)
						call set_sound_volume(var verwind_sound_ref, var VAR_17)
						var VAR_16 = int 255 - var VAR_17
						var VAR_14 = int 0
						var VAR_13 ++ 
				}
				break 
			case 4
				if(var VAR_14 > var VAR_16)
				 {
						var verwind_sound_ref = call play_loaded_sound /* 'thunstrk' */ (int 4, int 0, int 25, int 0)
						call set_sound_volume(var verwind_sound_ref, var VAR_17)
						if(var ! VAR_3)
						 {
								var VAR_3 = int 1
						}
						var VAR_13 ++ 
						var VAR_14 = int 0
				}
				break 
			case 5
				if(var VAR_14 > int 100)
				 {
						var VAR_13 = int 1
						var VAR_14 = int 0
				}
				break 
	}
	var VAR_14 ++ 
